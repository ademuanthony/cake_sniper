{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Context.sol",
    "1": "contracts/ERC20.sol",
    "2": "contracts/IERC20.sol",
    "3": "contracts/IERC20Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC20.sol",
    "exportedSymbols": {
      "Context": [
        1404
      ],
      "ERC20": [
        512
      ],
      "IERC20": [
        590
      ],
      "IERC20Metadata": [
        615
      ]
    },
    "id": 513,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "contracts/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 591,
        "src": "58:22:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IERC20Metadata.sol",
        "file": "./IERC20Metadata.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 616,
        "src": "81:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Context.sol",
        "file": "./Context.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 513,
        "sourceUnit": 1405,
        "src": "112:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Context",
              "nameLocations": [
                "1318:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1404,
              "src": "1318:7:1"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "1318:7:1"
          },
          {
            "baseName": {
              "id": 8,
              "name": "IERC20",
              "nameLocations": [
                "1327:6:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 590,
              "src": "1327:6:1"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "1327:6:1"
          },
          {
            "baseName": {
              "id": 10,
              "name": "IERC20Metadata",
              "nameLocations": [
                "1335:14:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 615,
              "src": "1335:14:1"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "1335:14:1"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "137:1162:1",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 512,
        "linearizedBaseContracts": [
          512,
          615,
          590,
          1404
        ],
        "name": "ERC20",
        "nameLocation": "1309:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1393:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 512,
            "src": "1356:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1365:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1356:28:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1376:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1467:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 512,
            "src": "1409:69:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 20,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1418:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1409:49:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 19,
                "keyType": {
                  "id": 17,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1438:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1429:28:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1449:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1501:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 512,
            "src": "1485:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1485:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1534:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 512,
            "src": "1519:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1519:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1560:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 512,
            "src": "1545:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 26,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1545:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "1952:94:1",
              "statements": [
                {
                  "expression": {
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1962:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1970:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1962:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "1962:13:1"
                },
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1985:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1995:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1985:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:17:1"
                },
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2012:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2027:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2012:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "2012:27:1"
                }
              ]
            },
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "1574:297:1",
              "text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 50,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1903:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1889:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1924:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1910:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "totalSupply_",
                  "nameLocation": "1938:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1933:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1888:63:1"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1952:0:1"
            },
            "scope": 512,
            "src": "1876:170:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              602
            ],
            "body": {
              "id": 59,
              "nodeType": "Block",
              "src": "2180:29:1",
              "statements": [
                {
                  "expression": {
                    "id": 57,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "2197:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 56,
                  "id": 58,
                  "nodeType": "Return",
                  "src": "2190:12:1"
                }
              ]
            },
            "documentation": {
              "id": 51,
              "nodeType": "StructuredDocumentation",
              "src": "2052:54:1",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 60,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2120:4:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 53,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2147:8:1"
            },
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2124:2:1"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "2165:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2164:15:1"
            },
            "scope": 512,
            "src": "2111:98:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              608
            ],
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "2393:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 67,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "2410:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 66,
                  "id": 68,
                  "nodeType": "Return",
                  "src": "2403:14:1"
                }
              ]
            },
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "2215:102:1",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2331:6:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 63,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2360:8:1"
            },
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2337:2:1"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "2378:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2377:15:1"
            },
            "scope": 512,
            "src": "2322:102:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              614
            ],
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "3113:26:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3130:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 76,
                  "id": 78,
                  "nodeType": "Return",
                  "src": "3123:9:1"
                }
              ]
            },
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "2430:613:1",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3057:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 73,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3088:8:1"
            },
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3065:2:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "3106:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3106:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3105:7:1"
            },
            "scope": 512,
            "src": "3048:91:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              521
            ],
            "body": {
              "id": 89,
              "nodeType": "Block",
              "src": "3269:36:1",
              "statements": [
                {
                  "expression": {
                    "id": 87,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23,
                    "src": "3286:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 88,
                  "nodeType": "Return",
                  "src": "3279:19:1"
                }
              ]
            },
            "documentation": {
              "id": 81,
              "nodeType": "StructuredDocumentation",
              "src": "3145:49:1",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 90,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3208:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 83,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3242:8:1"
            },
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3219:2:1"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "3260:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3259:9:1"
            },
            "scope": 512,
            "src": "3199:106:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              529
            ],
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "3446:42:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 99,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3463:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "id": 100,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "3473:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3463:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 98,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "3456:25:1"
                }
              ]
            },
            "documentation": {
              "id": 91,
              "nodeType": "StructuredDocumentation",
              "src": "3311:47:1",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3372:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 95,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3419:8:1"
            },
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3390:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "3382:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3381:17:1"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "3437:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3437:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3436:9:1"
            },
            "scope": 512,
            "src": "3363:125:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              539
            ],
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "3783:80:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 116,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1392,
                          "src": "3803:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3803:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 118,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "3817:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 119,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "3828:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 115,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "3793:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3793:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "3793:42:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3852:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 114,
                  "id": 123,
                  "nodeType": "Return",
                  "src": "3845:11:1"
                }
              ]
            },
            "documentation": {
              "id": 105,
              "nodeType": "StructuredDocumentation",
              "src": "3494:192:1",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 125,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3700:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 111,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3759:8:1"
            },
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3717:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3709:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3736:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3728:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3728:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3708:35:1"
            },
            "returnParameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "3777:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3777:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3776:6:1"
            },
            "scope": 512,
            "src": "3691:172:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              549
            ],
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "4019:51:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 136,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "4036:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 138,
                      "indexExpression": {
                        "id": 137,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "4048:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4036:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 140,
                    "indexExpression": {
                      "id": 139,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "4055:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4036:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 141,
                  "nodeType": "Return",
                  "src": "4029:34:1"
                }
              ]
            },
            "documentation": {
              "id": 126,
              "nodeType": "StructuredDocumentation",
              "src": "3869:47:1",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "3930:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 132,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3992:8:1"
            },
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3948:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "3940:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3963:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "3955:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3955:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3939:32:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "4010:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4010:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4009:9:1"
            },
            "scope": 512,
            "src": "3921:149:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              559
            ],
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "4297:77:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 155,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1392,
                          "src": "4316:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4316:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 157,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "4330:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 158,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 148,
                        "src": "4339:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 154,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "4307:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4307:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "4307:39:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4363:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 153,
                  "id": 162,
                  "nodeType": "Return",
                  "src": "4356:11:1"
                }
              ]
            },
            "documentation": {
              "id": 144,
              "nodeType": "StructuredDocumentation",
              "src": "4076:127:1",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4217:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 150,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4273:8:1"
            },
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 146,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4233:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "4225:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4225:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4250:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "4242:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4242:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4224:33:1"
            },
            "returnParameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "4291:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4291:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4290:6:1"
            },
            "scope": 512,
            "src": "4208:166:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              571
            ],
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "4953:302:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "4973:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 179,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "4981:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 180,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "4992:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 177,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "4963:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4963:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "4963:36:1"
                },
                {
                  "assignments": [
                    184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 184,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5018:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 210,
                      "src": "5010:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5010:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 191,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 185,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "5037:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 187,
                      "indexExpression": {
                        "id": 186,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "5049:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5037:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 190,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 188,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "5057:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5057:12:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5037:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5010:60:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 193,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "5088:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 194,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "5108:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5088:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5116:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5080:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5080:79:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "5080:79:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 200,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "5178:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 201,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1392,
                          "src": "5186:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5186:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 203,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "5200:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 204,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "5219:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5200:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 199,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "5169:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5169:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "5169:57:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5244:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 176,
                  "id": 209,
                  "nodeType": "Return",
                  "src": "5237:11:1"
                }
              ]
            },
            "documentation": {
              "id": 165,
              "nodeType": "StructuredDocumentation",
              "src": "4380:456:1",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4850:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4929:8:1"
            },
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4871:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4863:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4863:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4887:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4879:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4879:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4906:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4898:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4898:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4862:51:1"
            },
            "returnParameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "4947:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4947:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4946:6:1"
            },
            "scope": 512,
            "src": "4841:414:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "5744:118:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 222,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1392,
                          "src": "5763:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5763:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 224,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "5777:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 225,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "5786:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 228,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 226,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1392,
                                "src": "5798:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5798:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5786:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 230,
                          "indexExpression": {
                            "id": 229,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "5812:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5786:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 231,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "5823:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5786:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 221,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "5754:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5754:80:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "5754:80:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5851:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 220,
                  "id": 236,
                  "nodeType": "Return",
                  "src": "5844:11:1"
                }
              ]
            },
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "5261:384:1",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "5659:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5685:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "5677:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5677:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "5702:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "5694:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5694:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5676:37:1"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "5738:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5738:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5737:6:1"
            },
            "scope": 512,
            "src": "5650:212:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "6448:272:1",
              "statements": [
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "6466:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "6458:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6458:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 250,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "6485:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 253,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 251,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1392,
                          "src": "6497:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6497:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6485:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 255,
                    "indexExpression": {
                      "id": 254,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 241,
                      "src": "6511:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6485:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6458:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 258,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "6537:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 259,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "6557:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6537:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6574:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6529:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6529:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "6529:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 265,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1392,
                          "src": "6633:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6633:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 267,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 241,
                        "src": "6647:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 268,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "6656:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 269,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 243,
                          "src": "6675:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6656:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 264,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "6624:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6624:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "6624:67:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6709:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 247,
                  "id": 274,
                  "nodeType": "Return",
                  "src": "6702:11:1"
                }
              ]
            },
            "documentation": {
              "id": 239,
              "nodeType": "StructuredDocumentation",
              "src": "5868:476:1",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "6358:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6384:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "6376:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6376:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "6401:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "6393:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6393:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6375:42:1"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "6442:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6442:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6441:6:1"
            },
            "scope": 512,
            "src": "6349:371:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 345,
              "nodeType": "Block",
              "src": "7281:505:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 287,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "7299:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7317:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7309:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7309:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7309:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7299:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7321:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7291:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7291:70:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "7291:70:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 297,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "7379:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7400:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7392:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 298,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7392:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7392:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7379:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7404:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7371:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7371:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "7371:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 307,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "7474:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 308,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "7482:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 309,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "7493:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 306,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "7453:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7453:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "7453:47:1"
                },
                {
                  "assignments": [
                    313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 313,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "7519:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 345,
                      "src": "7511:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 312,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7511:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "baseExpression": {
                      "id": 314,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "7535:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 316,
                    "indexExpression": {
                      "id": 315,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "7545:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7535:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7511:41:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 319,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 313,
                          "src": "7570:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 320,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "7587:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7570:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7595:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7562:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7562:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "7562:74:1"
                },
                {
                  "expression": {
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 325,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "7646:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 327,
                      "indexExpression": {
                        "id": 326,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "7656:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7646:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 328,
                        "name": "senderBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "7666:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 329,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "7682:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7666:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7646:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "7646:42:1"
                },
                {
                  "expression": {
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 333,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "7698:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 335,
                      "indexExpression": {
                        "id": 334,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "7708:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7698:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 336,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "7722:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7698:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "7698:30:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 340,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "7753:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 341,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "7761:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 342,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "7772:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 339,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 580,
                      "src": "7744:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7744:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "EmitStatement",
                  "src": "7739:40:1"
                }
              ]
            },
            "documentation": {
              "id": 277,
              "nodeType": "StructuredDocumentation",
              "src": "6726:463:1",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 346,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "7203:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7221:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "7213:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7213:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "7237:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "7229:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7229:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7256:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "7248:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7248:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7212:51:1"
            },
            "returnParameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7281:0:1"
            },
            "scope": 512,
            "src": "7194:592:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 392,
              "nodeType": "Block",
              "src": "8122:265:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 355,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "8140:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8159:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8151:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 356,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8151:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8151:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8140:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8163:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8132:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8132:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "8132:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8237:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8229:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 365,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8229:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8229:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 369,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "8241:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 370,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "8250:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 364,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "8208:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8208:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "8208:49:1"
                },
                {
                  "expression": {
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 373,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "8268:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 374,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "8284:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8268:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "8268:22:1"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 377,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "8300:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 379,
                      "indexExpression": {
                        "id": 378,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "8310:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8300:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 380,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "8322:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8300:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "8300:28:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8360:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8352:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 384,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8352:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8352:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 388,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "8364:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 389,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "8373:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 383,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 580,
                      "src": "8343:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8343:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "EmitStatement",
                  "src": "8338:42:1"
                }
              ]
            },
            "documentation": {
              "id": 347,
              "nodeType": "StructuredDocumentation",
              "src": "7792:260:1",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
            },
            "id": 393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8066:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8080:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 393,
                  "src": "8072:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8072:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8097:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 393,
                  "src": "8089:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8089:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8071:33:1"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8122:0:1"
            },
            "scope": 512,
            "src": "8057:330:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "8772:418:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 402,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "8790:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8809:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8801:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 403,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8801:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8801:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8790:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8813:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8782:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8782:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "8782:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 412,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "8881:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8898:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8890:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 413,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8890:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8890:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 417,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "8902:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 411,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "8860:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8860:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "8860:49:1"
                },
                {
                  "assignments": [
                    421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 421,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "8928:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 454,
                      "src": "8920:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 420,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8920:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 425,
                  "initialValue": {
                    "baseExpression": {
                      "id": 422,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "8945:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 424,
                    "indexExpression": {
                      "id": 423,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 396,
                      "src": "8955:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8945:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8920:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 427,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "8981:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 428,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 398,
                          "src": "8999:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8981:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9007:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8973:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8973:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "8973:71:1"
                },
                {
                  "expression": {
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 433,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "9054:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 435,
                      "indexExpression": {
                        "id": 434,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "9064:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9054:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 436,
                        "name": "accountBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "9075:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 437,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "9092:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9075:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9054:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "9054:44:1"
                },
                {
                  "expression": {
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 441,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "9108:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 442,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 398,
                      "src": "9124:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9108:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "9108:22:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 446,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 396,
                        "src": "9155:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9172:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9164:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 447,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9164:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9164:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 451,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 398,
                        "src": "9176:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 445,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 580,
                      "src": "9146:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9146:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "EmitStatement",
                  "src": "9141:42:1"
                }
              ]
            },
            "documentation": {
              "id": 394,
              "nodeType": "StructuredDocumentation",
              "src": "8393:309:1",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "8716:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 396,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8730:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "8722:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8722:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8747:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "8739:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8739:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8721:33:1"
            },
            "returnParameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8772:0:1"
            },
            "scope": 512,
            "src": "8707:483:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 499,
              "nodeType": "Block",
              "src": "9696:257:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 466,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "9714:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9731:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9723:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 467,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9723:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9723:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9714:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9735:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9706:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9706:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "9706:68:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 476,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "9792:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9811:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9803:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 477,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9803:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9803:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9792:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9815:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9784:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9784:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "9784:68:1"
                },
                {
                  "expression": {
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 485,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "9863:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 488,
                        "indexExpression": {
                          "id": 486,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 458,
                          "src": "9875:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9863:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 489,
                      "indexExpression": {
                        "id": 487,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "9882:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9863:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 490,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 462,
                      "src": "9893:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9863:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "9863:36:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 494,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "9923:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 495,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "9930:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 496,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "9939:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 493,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "9914:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9914:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "EmitStatement",
                  "src": "9909:37:1"
                }
              ]
            },
            "documentation": {
              "id": 456,
              "nodeType": "StructuredDocumentation",
              "src": "9196:412:1",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "9622:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9639:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "9631:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9631:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "9654:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "9646:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9646:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 462,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9671:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 500,
                  "src": "9663:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9663:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9630:48:1"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9696:0:1"
            },
            "scope": 512,
            "src": "9613:340:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 510,
              "nodeType": "Block",
              "src": "10629:3:1",
              "statements": []
            },
            "documentation": {
              "id": 501,
              "nodeType": "StructuredDocumentation",
              "src": "9959:576:1",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "10549:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10578:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "10570:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10570:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10592:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "10584:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10584:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10604:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "10596:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10596:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10569:42:1"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10629:0:1"
            },
            "scope": 512,
            "src": "10540:92:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 513,
        "src": "1300:9334:1",
        "usedErrors": []
      }
    ],
    "src": "33:10601:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000be138038062000be1833981016040819052620000349162000123565b600362000042848262000225565b50600462000051838262000225565b5060025550620002f19050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b6000806000606084860312156200013957600080fd5b83516001600160401b03808211156200015157600080fd5b6200015f8783880162000074565b945060208601519150808211156200017657600080fd5b50620001858682870162000074565b925050604084015190509250925092565b600181811c90821680620001ab57607f821691505b602082108103620001cc57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022057600081815260208120601f850160051c81016020861015620001fb5750805b601f850160051c820191505b818110156200021c5782815560010162000207565b5050505b505050565b81516001600160401b038111156200024157620002416200005e565b620002598162000252845462000196565b84620001d2565b602080601f831160018114620002915760008415620002785750858301515b600019600386901b1c1916600185901b1785556200021c565b600085815260208120601f198616915b82811015620002c257888601518255948401946001909101908401620002a1565b5085821015620002e15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6108e080620003016000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070f565b60405180910390f35b6100df6100da366004610779565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a3565b61026f565b604051601281526020016100c3565b6100df610131366004610779565b610325565b6100f36101443660046107df565b6001600160a01b031660009081526020819052604090205490565b6100b661035c565b6100df610175366004610779565b61036b565b6100df610188366004610779565b610406565b6100f361019b366004610801565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610834565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610834565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b6000610265338484610413565b5060015b92915050565b600061027c848484610537565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103065760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61031a85336103158685610884565b610413565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610315908690610897565b6060600480546101d590610834565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ed5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fd565b6103fc33856103158685610884565b5060019392505050565b6000610265338484610537565b6001600160a01b0383166104755760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fd565b6001600160a01b0382166104d65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661059b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fd565b6001600160a01b0382166105fd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fd565b6001600160a01b038316600090815260208190526040902054818110156106755760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fd565b61067f8282610884565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106b5908490610897565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070191815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561073c57858101830151858201604001528201610720565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461077457600080fd5b919050565b6000806040838503121561078c57600080fd5b6107958361075d565b946020939093013593505050565b6000806000606084860312156107b857600080fd5b6107c18461075d565b92506107cf6020850161075d565b9150604084013590509250925092565b6000602082840312156107f157600080fd5b6107fa8261075d565b9392505050565b6000806040838503121561081457600080fd5b61081d8361075d565b915061082b6020840161075d565b90509250929050565b600181811c9082168061084857607f821691505b60208210810361086857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102695761026961086e565b808201808211156102695761026961086e56fea26469706673582212204522358fd7c3000269189a5688ee06c6eeae59f5345f1457895077cb1146c0db64736f6c63430008110033",
  "bytecodeSha1": "97d5860d7ad119523a546ca8947c5e76abef6058",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "ERC20._approve": {
          "30": [
            9714,
            9733,
            true
          ],
          "31": [
            9792,
            9813,
            true
          ]
        },
        "ERC20._transfer": {
          "32": [
            7299,
            7319,
            true
          ],
          "33": [
            7379,
            7402,
            true
          ],
          "34": [
            7570,
            7593,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6537,
            6572,
            true
          ]
        },
        "ERC20.transferFrom": {
          "28": [
            5088,
            5114,
            true
          ]
        }
      },
      "2": {},
      "3": {}
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "6": [
            676,
            702
          ]
        }
      },
      "1": {
        "ERC20._approve": {
          "18": [
            9706,
            9774
          ],
          "19": [
            9784,
            9852
          ],
          "20": [
            9863,
            9899
          ],
          "21": [
            9909,
            9946
          ]
        },
        "ERC20._transfer": {
          "22": [
            7291,
            7361
          ],
          "23": [
            7371,
            7442
          ],
          "24": [
            7562,
            7636
          ],
          "25": [
            7646,
            7688
          ],
          "26": [
            7698,
            7728
          ],
          "27": [
            7739,
            7779
          ]
        },
        "ERC20.allowance": {
          "3": [
            4029,
            4063
          ]
        },
        "ERC20.approve": {
          "5": [
            4307,
            4346
          ],
          "7": [
            4356,
            4367
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3456,
            3481
          ]
        },
        "ERC20.decimals": {
          "1": [
            3123,
            3132
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6529,
            6614
          ],
          "15": [
            6624,
            6691
          ],
          "16": [
            6702,
            6713
          ]
        },
        "ERC20.increaseAllowance": {
          "12": [
            5754,
            5834
          ]
        },
        "ERC20.name": {
          "4": [
            2190,
            2202
          ]
        },
        "ERC20.symbol": {
          "13": [
            2403,
            2417
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3279,
            3298
          ]
        },
        "ERC20.transfer": {
          "17": [
            3793,
            3835
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            4963,
            4999
          ],
          "9": [
            5080,
            5159
          ],
          "10": [
            5169,
            5226
          ],
          "11": [
            5237,
            5248
          ]
        }
      },
      "2": {},
      "3": {}
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070f565b60405180910390f35b6100df6100da366004610779565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a3565b61026f565b604051601281526020016100c3565b6100df610131366004610779565b610325565b6100f36101443660046107df565b6001600160a01b031660009081526020819052604090205490565b6100b661035c565b6100df610175366004610779565b61036b565b6100df610188366004610779565b610406565b6100f361019b366004610801565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d590610834565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610834565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b6000610265338484610413565b5060015b92915050565b600061027c848484610537565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103065760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61031a85336103158685610884565b610413565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610315908690610897565b6060600480546101d590610834565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ed5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fd565b6103fc33856103158685610884565b5060019392505050565b6000610265338484610537565b6001600160a01b0383166104755760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fd565b6001600160a01b0382166104d65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661059b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fd565b6001600160a01b0382166105fd5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fd565b6001600160a01b038316600090815260208190526040902054818110156106755760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fd565b61067f8282610884565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106b5908490610897565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070191815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561073c57858101830151858201604001528201610720565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461077457600080fd5b919050565b6000806040838503121561078c57600080fd5b6107958361075d565b946020939093013593505050565b6000806000606084860312156107b857600080fd5b6107c18461075d565b92506107cf6020850161075d565b9150604084013590509250925092565b6000602082840312156107f157600080fd5b6107fa8261075d565b9392505050565b6000806040838503121561081457600080fd5b61081d8361075d565b915061082b6020840161075d565b90509250929050565b600181811c9082168061084857607f821691505b60208210810361086857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102695761026961086e565b808201808211156102695761026961086e56fea26469706673582212204522358fd7c3000269189a5688ee06c6eeae59f5345f1457895077cb1146c0db64736f6c63430008110033",
  "deployedSourceMap": "1300:9334:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2111:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4208:166;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:6;;1162:22;1144:41;;1132:2;1117:18;4208:166:1;1004:187:6;3199:106:1;3286:12;;3199:106;;;1342:25:6;;;1330:2;1315:18;3199:106:1;1196:177:6;4841:414:1;;;;;;:::i;:::-;;:::i;3048:91::-;;;3130:2;1853:36:6;;1841:2;1826:18;3048:91:1;1711:184:6;5650:212:1;;;;;;:::i;:::-;;:::i;3363:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3463:18:1;3437:7;3463:18;;;;;;;;;;;;3363:125;2322:102;;;:::i;6349:371::-;;;;;;:::i;:::-;;:::i;3691:172::-;;;;;;:::i;:::-;;:::i;3921:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4036:18:1;;;4010:7;4036:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3921:149;2111:98;2165:13;2197:5;2190:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2111:98;:::o;4208:166::-;4291:4;4307:39;691:10:0;4330:7:1;4339:6;4307:8;:39::i;:::-;-1:-1:-1;4363:4:1;4208:166;;;;;:::o;4841:414::-;4947:4;4963:36;4973:6;4981:9;4992:6;4963:9;:36::i;:::-;-1:-1:-1;;;;;5037:19:1;;5010:24;5037:19;;;:11;:19;;;;;;;;691:10:0;5037:33:1;;;;;;;;5088:26;;;;5080:79;;;;-1:-1:-1;;;5080:79:1;;2943:2:6;5080:79:1;;;2925:21:6;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:6;;;3065:38;3120:19;;5080:79:1;;;;;;;;;5169:57;5178:6;691:10:0;5200:25:1;5219:6;5200:16;:25;:::i;:::-;5169:8;:57::i;:::-;-1:-1:-1;5244:4:1;;4841:414;-1:-1:-1;;;;4841:414:1:o;5650:212::-;691:10:0;5738:4:1;5786:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5786:34:1;;;;;;;;;;5738:4;;5754:80;;5777:7;;5786:47;;5823:10;;5786:47;:::i;2322:102::-;2378:13;2410:7;2403:14;;;;;:::i;6349:371::-;691:10:0;6442:4:1;6485:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6485:34:1;;;;;;;;;;6537:35;;;;6529:85;;;;-1:-1:-1;;;6529:85:1;;3747:2:6;6529:85:1;;;3729:21:6;3786:2;3766:18;;;3759:30;3825:34;3805:18;;;3798:62;-1:-1:-1;;;3876:18:6;;;3869:35;3921:19;;6529:85:1;3545:401:6;6529:85:1;6624:67;691:10:0;6647:7:1;6656:34;6675:15;6656:16;:34;:::i;6624:67::-;-1:-1:-1;6709:4:1;;6349:371;-1:-1:-1;;;6349:371:1:o;3691:172::-;3777:4;3793:42;691:10:0;3817:9:1;3828:6;3793:9;:42::i;9613:340::-;-1:-1:-1;;;;;9714:19:1;;9706:68;;;;-1:-1:-1;;;9706:68:1;;4153:2:6;9706:68:1;;;4135:21:6;4192:2;4172:18;;;4165:30;4231:34;4211:18;;;4204:62;-1:-1:-1;;;4282:18:6;;;4275:34;4326:19;;9706:68:1;3951:400:6;9706:68:1;-1:-1:-1;;;;;9792:21:1;;9784:68;;;;-1:-1:-1;;;9784:68:1;;4558:2:6;9784:68:1;;;4540:21:6;4597:2;4577:18;;;4570:30;4636:34;4616:18;;;4609:62;-1:-1:-1;;;4687:18:6;;;4680:32;4729:19;;9784:68:1;4356:398:6;9784:68:1;-1:-1:-1;;;;;9863:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9914:32;;1342:25:6;;;9914:32:1;;1315:18:6;9914:32:1;;;;;;;9613:340;;;:::o;7194:592::-;-1:-1:-1;;;;;7299:20:1;;7291:70;;;;-1:-1:-1;;;7291:70:1;;4961:2:6;7291:70:1;;;4943:21:6;5000:2;4980:18;;;4973:30;5039:34;5019:18;;;5012:62;-1:-1:-1;;;5090:18:6;;;5083:35;5135:19;;7291:70:1;4759:401:6;7291:70:1;-1:-1:-1;;;;;7379:23:1;;7371:71;;;;-1:-1:-1;;;7371:71:1;;5367:2:6;7371:71:1;;;5349:21:6;5406:2;5386:18;;;5379:30;5445:34;5425:18;;;5418:62;-1:-1:-1;;;5496:18:6;;;5489:33;5539:19;;7371:71:1;5165:399:6;7371:71:1;-1:-1:-1;;;;;7535:17:1;;7511:21;7535:17;;;;;;;;;;;7570:23;;;;7562:74;;;;-1:-1:-1;;;7562:74:1;;5771:2:6;7562:74:1;;;5753:21:6;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:6;;;5893:36;5946:19;;7562:74:1;5569:402:6;7562:74:1;7666:22;7682:6;7666:13;:22;:::i;:::-;-1:-1:-1;;;;;7646:17:1;;;:9;:17;;;;;;;;;;;:42;;;;7698:20;;;;;;;;:30;;7722:6;;7646:9;7698:30;;7722:6;;7698:30;:::i;:::-;;;;;;;;7761:9;-1:-1:-1;;;;;7744:35:1;7753:6;-1:-1:-1;;;;;7744:35:1;;7772:6;7744:35;;;;1342:25:6;;1330:2;1315:18;;1196:177;7744:35:1;;;;;;;;7281:505;7194:592;;;:::o;14:548:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:6;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:6:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:6:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3150:127::-;3211:10;3206:3;3202:20;3199:1;3192:31;3242:4;3239:1;3232:15;3266:4;3263:1;3256:15;3282:128;3349:9;;;3370:11;;;3367:37;;;3384:18;;:::i;3415:125::-;3480:9;;;3501:10;;;3498:36;;;3514:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1300,
    10634
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x35C JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x779 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x834 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x834 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP5 DUP5 DUP5 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x31A DUP6 CALLER PUSH2 0x315 DUP7 DUP6 PUSH2 0x884 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x315 SWAP1 DUP7 SWAP1 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x834 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x3FC CALLER DUP6 PUSH2 0x315 DUP7 DUP6 PUSH2 0x884 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x59B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x67F DUP3 DUP3 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B5 SWAP1 DUP5 SWAP1 PUSH2 0x897 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x701 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x73C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x720 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x795 DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C1 DUP5 PUSH2 0x75D JUMP JUMPDEST SWAP3 POP PUSH2 0x7CF PUSH1 0x20 DUP6 ADD PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA DUP3 PUSH2 0x75D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81D DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH2 0x82B PUSH1 0x20 DUP5 ADD PUSH2 0x75D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x848 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x868 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x269 JUMPI PUSH2 0x269 PUSH2 0x86E JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x269 JUMPI PUSH2 0x269 PUSH2 0x86E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0x22 CALLDATALOAD DUP16 0xD7 0xC3 STOP MUL PUSH10 0x189A5688EE06C6EEAE59 CREATE2 CALLVALUE 0x5F EQ JUMPI DUP10 POP PUSH24 0xCB1146C0DB64736F6C634300081100330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x123"
    },
    "53": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "64": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F"
    },
    "75": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x167"
    },
    "86": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17A"
    },
    "97": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18D"
    },
    "108": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "REVERT",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC"
    },
    "135": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "154": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "157": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "158": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "EQ",
      "path": "1"
    },
    "165": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114"
    },
    "168": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "169": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "DUP1",
      "path": "1"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1300,
        10634
      ],
      "op": "REVERT",
      "path": "1"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C6"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2111,
        2209
      ],
      "op": "JUMP",
      "path": "1"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70F"
    },
    "194": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2111,
        2209
      ],
      "op": "JUMP",
      "path": "1"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "DUP1",
      "path": "1"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "SUB",
      "path": "1"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "RETURN",
      "path": "1"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x779"
    },
    "217": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4208,
        4374
      ],
      "op": "JUMP",
      "path": "1"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "219": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x258"
    },
    "222": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4208,
        4374
      ],
      "op": "JUMP",
      "path": "1"
    },
    "223": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "226": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "227": {
      "op": "SWAP1"
    },
    "228": {
      "op": "ISZERO"
    },
    "229": {
      "op": "ISZERO"
    },
    "230": {
      "op": "DUP2"
    },
    "231": {
      "op": "MSTORE"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3"
    },
    "238": {
      "op": "JUMP"
    },
    "239": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3199,
        3305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "240": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3286,
        3298
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x2"
    },
    "242": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3286,
        3298
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "243": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3199,
        3305
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "244": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3199,
        3305
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3199,
        3305
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "247": {
      "op": "SWAP1"
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3199,
        3305
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3"
    },
    "256": {
      "op": "JUMP"
    },
    "257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10F"
    },
    "264": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "265": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A3"
    },
    "270": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4841,
        5255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "271": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "272": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26F"
    },
    "275": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4841,
        5255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "276": {
      "fn": "ERC20.decimals",
      "offset": [
        3048,
        3139
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "277": {
      "fn": "ERC20.decimals",
      "offset": [
        3048,
        3139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "279": {
      "fn": "ERC20.decimals",
      "offset": [
        3048,
        3139
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "280": {
      "fn": "ERC20.decimals",
      "offset": [
        3130,
        3132
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x12"
    },
    "282": {
      "op": "DUP2"
    },
    "283": {
      "op": "MSTORE"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "ADD"
    },
    "287": {
      "fn": "ERC20.decimals",
      "offset": [
        3048,
        3139
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3"
    },
    "290": {
      "op": "JUMP"
    },
    "291": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5650,
        5862
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5650,
        5862
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "295": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5650,
        5862
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x131"
    },
    "298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5650,
        5862
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5650,
        5862
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "301": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5650,
        5862
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x779"
    },
    "304": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5650,
        5862
      ],
      "op": "JUMP",
      "path": "1"
    },
    "305": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5650,
        5862
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "306": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5650,
        5862
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x325"
    },
    "309": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5650,
        5862
      ],
      "op": "JUMP",
      "path": "1"
    },
    "310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3363,
        3488
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3363,
        3488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "314": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3363,
        3488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x144"
    },
    "317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3363,
        3488
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "318": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3363,
        3488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3363,
        3488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7DF"
    },
    "323": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3363,
        3488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "324": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3363,
        3488
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "AND",
      "path": "1",
      "statement": 2
    },
    "334": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3437,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "336": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "337": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "338": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "339": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "341": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "342": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "343": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "344": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "347": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "348": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "349": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3463,
        3481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "350": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3363,
        3488
      ],
      "op": "JUMP",
      "path": "1"
    },
    "351": {
      "fn": "ERC20.symbol",
      "offset": [
        2322,
        2424
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "352": {
      "fn": "ERC20.symbol",
      "offset": [
        2322,
        2424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6"
    },
    "355": {
      "fn": "ERC20.symbol",
      "offset": [
        2322,
        2424
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35C"
    },
    "358": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2322,
        2424
      ],
      "op": "JUMP",
      "path": "1"
    },
    "359": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "360": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "363": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x175"
    },
    "366": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "367": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "369": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x779"
    },
    "372": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6349,
        6720
      ],
      "op": "JUMP",
      "path": "1"
    },
    "373": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "374": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36B"
    },
    "377": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6349,
        6720
      ],
      "op": "JUMP",
      "path": "1"
    },
    "378": {
      "fn": "ERC20.transfer",
      "offset": [
        3691,
        3863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "379": {
      "fn": "ERC20.transfer",
      "offset": [
        3691,
        3863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDF"
    },
    "382": {
      "fn": "ERC20.transfer",
      "offset": [
        3691,
        3863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x188"
    },
    "385": {
      "fn": "ERC20.transfer",
      "offset": [
        3691,
        3863
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "386": {
      "fn": "ERC20.transfer",
      "offset": [
        3691,
        3863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "388": {
      "fn": "ERC20.transfer",
      "offset": [
        3691,
        3863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x779"
    },
    "391": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3691,
        3863
      ],
      "op": "JUMP",
      "path": "1"
    },
    "392": {
      "fn": "ERC20.transfer",
      "offset": [
        3691,
        3863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "393": {
      "fn": "ERC20.transfer",
      "offset": [
        3691,
        3863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x406"
    },
    "396": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3691,
        3863
      ],
      "op": "JUMP",
      "path": "1"
    },
    "397": {
      "fn": "ERC20.allowance",
      "offset": [
        3921,
        4070
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "398": {
      "fn": "ERC20.allowance",
      "offset": [
        3921,
        4070
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "401": {
      "fn": "ERC20.allowance",
      "offset": [
        3921,
        4070
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19B"
    },
    "404": {
      "fn": "ERC20.allowance",
      "offset": [
        3921,
        4070
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "405": {
      "fn": "ERC20.allowance",
      "offset": [
        3921,
        4070
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "407": {
      "fn": "ERC20.allowance",
      "offset": [
        3921,
        4070
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x801"
    },
    "410": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3921,
        4070
      ],
      "op": "JUMP",
      "path": "1"
    },
    "411": {
      "fn": "ERC20.allowance",
      "offset": [
        3921,
        4070
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "418": {
      "op": "SHL"
    },
    "419": {
      "op": "SUB"
    },
    "420": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 3
    },
    "421": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "DUP3",
      "path": "1"
    },
    "422": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "AND",
      "path": "1"
    },
    "423": {
      "fn": "ERC20.allowance",
      "offset": [
        4010,
        4017
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "426": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "DUP2",
      "path": "1"
    },
    "427": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "428": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4047
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "430": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "432": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "433": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "DUP2",
      "path": "1"
    },
    "434": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "435": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "DUP1",
      "path": "1"
    },
    "438": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "DUP4",
      "path": "1"
    },
    "439": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4054
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "440": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "441": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "442": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "443": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "AND",
      "path": "1"
    },
    "444": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "DUP3",
      "path": "1"
    },
    "445": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "446": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "447": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "448": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "449": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "450": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "451": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "452": {
      "fn": "ERC20.allowance",
      "offset": [
        4036,
        4063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "453": {
      "fn": "ERC20.allowance",
      "offset": [
        3921,
        4070
      ],
      "op": "JUMP",
      "path": "1"
    },
    "454": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "455": {
      "fn": "ERC20.name",
      "offset": [
        2165,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2197,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x3"
    },
    "459": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP1",
      "path": "1"
    },
    "460": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D5"
    },
    "464": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x834"
    },
    "468": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMP",
      "path": "1"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "470": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP1",
      "path": "1"
    },
    "471": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ADD",
      "path": "1"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "476": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP1",
      "path": "1"
    },
    "477": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DIV",
      "path": "1"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "MUL",
      "path": "1"
    },
    "480": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ADD",
      "path": "1"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "487": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP2",
      "path": "1"
    },
    "488": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ADD",
      "path": "1"
    },
    "489": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "491": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "492": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP1",
      "path": "1"
    },
    "493": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "494": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "495": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "496": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP2",
      "path": "1"
    },
    "497": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP2",
      "path": "1"
    },
    "498": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "499": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "501": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ADD",
      "path": "1"
    },
    "502": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP3",
      "path": "1"
    },
    "503": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP1",
      "path": "1"
    },
    "504": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "505": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x201"
    },
    "508": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "509": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x834"
    },
    "512": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMP",
      "path": "1"
    },
    "513": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "514": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP1",
      "path": "1"
    },
    "515": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "516": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24E"
    },
    "519": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "520": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP1",
      "path": "1"
    },
    "521": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "523": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "LT",
      "path": "1"
    },
    "524": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x223"
    },
    "527": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "528": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "531": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP1",
      "path": "1"
    },
    "532": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP4",
      "path": "1"
    },
    "533": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "534": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DIV",
      "path": "1"
    },
    "535": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "MUL",
      "path": "1"
    },
    "536": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP4",
      "path": "1"
    },
    "537": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "538": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "539": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "541": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ADD",
      "path": "1"
    },
    "542": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "543": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24E"
    },
    "546": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMP",
      "path": "1"
    },
    "547": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "548": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP3",
      "path": "1"
    },
    "549": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ADD",
      "path": "1"
    },
    "550": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "551": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "552": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "554": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "555": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "557": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "559": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "560": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "561": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "562": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP2",
      "path": "1"
    },
    "563": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "564": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP2",
      "path": "1"
    },
    "565": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "566": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "567": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "569": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ADD",
      "path": "1"
    },
    "570": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "571": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "573": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ADD",
      "path": "1"
    },
    "574": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP1",
      "path": "1"
    },
    "575": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP4",
      "path": "1"
    },
    "576": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "GT",
      "path": "1"
    },
    "577": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x231"
    },
    "580": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "581": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP3",
      "path": "1"
    },
    "582": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "583": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SUB",
      "path": "1"
    },
    "584": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "586": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "AND",
      "path": "1"
    },
    "587": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "DUP3",
      "path": "1"
    },
    "588": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "ADD",
      "path": "1"
    },
    "589": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "590": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "591": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "POP",
      "path": "1"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "POP",
      "path": "1"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "POP",
      "path": "1"
    },
    "594": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "POP",
      "path": "1"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "POP",
      "path": "1"
    },
    "596": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [
        2190,
        2202
      ],
      "op": "POP",
      "path": "1"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [
        2111,
        2209
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "599": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2111,
        2209
      ],
      "op": "JUMP",
      "path": "1"
    },
    "600": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "601": {
      "fn": "ERC20.approve",
      "offset": [
        4291,
        4295
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "603": {
      "fn": "ERC20.approve",
      "offset": [
        4307,
        4346
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 5,
      "value": "0x265"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 6
    },
    "607": {
      "fn": "ERC20.approve",
      "offset": [
        4330,
        4337
      ],
      "op": "DUP5",
      "path": "1"
    },
    "608": {
      "fn": "ERC20.approve",
      "offset": [
        4339,
        4345
      ],
      "op": "DUP5",
      "path": "1"
    },
    "609": {
      "fn": "ERC20.approve",
      "offset": [
        4307,
        4315
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x413"
    },
    "612": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4307,
        4346
      ],
      "op": "JUMP",
      "path": "1"
    },
    "613": {
      "fn": "ERC20.approve",
      "offset": [
        4307,
        4346
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "ERC20.approve",
      "offset": [
        4363,
        4367
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x1"
    },
    "617": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "618": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "619": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "POP",
      "path": "1"
    },
    "621": {
      "fn": "ERC20.approve",
      "offset": [
        4208,
        4374
      ],
      "op": "POP",
      "path": "1"
    },
    "622": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4208,
        4374
      ],
      "op": "JUMP",
      "path": "1"
    },
    "623": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "624": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4947,
        4951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "626": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        4999
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 8,
      "value": "0x27C"
    },
    "629": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4973,
        4979
      ],
      "op": "DUP5",
      "path": "1"
    },
    "630": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4981,
        4990
      ],
      "op": "DUP5",
      "path": "1"
    },
    "631": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4992,
        4998
      ],
      "op": "DUP5",
      "path": "1"
    },
    "632": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        4972
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x537"
    },
    "635": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4963,
        4999
      ],
      "op": "JUMP",
      "path": "1"
    },
    "636": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4963,
        4999
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "643": {
      "op": "SHL"
    },
    "644": {
      "op": "SUB"
    },
    "645": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "DUP5",
      "path": "1"
    },
    "646": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "AND",
      "path": "1"
    },
    "647": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5010,
        5034
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "650": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "DUP2",
      "path": "1"
    },
    "651": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5048
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "657": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "DUP2",
      "path": "1"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "661": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "DUP1",
      "path": "1"
    },
    "662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "DUP4",
      "path": "1"
    },
    "663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5056
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "664": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5070
      ],
      "op": "DUP5",
      "path": "1"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5070
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5070
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5070
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "671": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5070
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "672": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5037,
        5070
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "673": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5088,
        5114
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 9
    },
    "674": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5088,
        5114
      ],
      "op": "DUP2",
      "path": "1"
    },
    "675": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5088,
        5114
      ],
      "op": "LT",
      "path": "1"
    },
    "676": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5088,
        5114
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "677": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x306"
    },
    "680": {
      "branch": 28,
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "681": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "683": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "DUP2",
      "path": "1"
    },
    "692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "697": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "DUP3",
      "path": "1"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "ADD",
      "path": "1"
    },
    "699": {
      "op": "MSTORE"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "704": {
      "op": "DUP3"
    },
    "705": {
      "op": "ADD"
    },
    "706": {
      "op": "MSTORE"
    },
    "707": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "759": {
      "op": "DUP3"
    },
    "760": {
      "op": "ADD"
    },
    "761": {
      "op": "MSTORE"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "764": {
      "op": "ADD"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "768": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "DUP1",
      "path": "1"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "SUB",
      "path": "1"
    },
    "772": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5080,
        5159
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5169,
        5226
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x31A"
    },
    "778": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5178,
        5184
      ],
      "op": "DUP6",
      "path": "1"
    },
    "779": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x315"
    },
    "783": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5219,
        5225
      ],
      "op": "DUP7",
      "path": "1"
    },
    "784": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5216
      ],
      "op": "DUP6",
      "path": "1"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x884"
    },
    "788": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5200,
        5225
      ],
      "op": "JUMP",
      "path": "1"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5225
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "790": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5169,
        5177
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x413"
    },
    "793": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5169,
        5226
      ],
      "op": "JUMP",
      "path": "1"
    },
    "794": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5169,
        5226
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5244,
        5248
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x1"
    },
    "798": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5244,
        5248
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "799": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4841,
        5255
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "800": {
      "op": "POP"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "op": "POP"
    },
    "803": {
      "op": "POP"
    },
    "804": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4841,
        5255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "805": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5650,
        5862
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "806": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "807": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5738,
        5742
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "809": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 12
    },
    "810": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "DUP2",
      "path": "1"
    },
    "811": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "812": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5797
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "814": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "816": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "817": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "DUP2",
      "path": "1"
    },
    "818": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "819": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "821": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "DUP1",
      "path": "1"
    },
    "822": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "DUP4",
      "path": "1"
    },
    "823": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5811
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "830": {
      "op": "SHL"
    },
    "831": {
      "op": "SUB"
    },
    "832": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "DUP8",
      "path": "1"
    },
    "833": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "AND",
      "path": "1"
    },
    "834": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "DUP5",
      "path": "1"
    },
    "835": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "836": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "837": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "838": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "839": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "DUP2",
      "path": "1"
    },
    "840": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "841": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5820
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "842": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5738,
        5742
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "843": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5738,
        5742
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "844": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5754,
        5834
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x265"
    },
    "847": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5754,
        5834
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "848": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5777,
        5784
      ],
      "op": "DUP6",
      "path": "1"
    },
    "849": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5777,
        5784
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "850": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5833
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x315"
    },
    "853": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5833
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "854": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5833
      ],
      "op": "DUP7",
      "path": "1"
    },
    "855": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5823,
        5833
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "856": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5786,
        5833
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x897"
    },
    "859": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5786,
        5833
      ],
      "op": "JUMP",
      "path": "1"
    },
    "860": {
      "fn": "ERC20.symbol",
      "offset": [
        2322,
        2424
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "861": {
      "fn": "ERC20.symbol",
      "offset": [
        2378,
        2391
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "863": {
      "fn": "ERC20.symbol",
      "offset": [
        2410,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x4"
    },
    "865": {
      "fn": "ERC20.symbol",
      "offset": [
        2403,
        2417
      ],
      "op": "DUP1",
      "path": "1"
    },
    "866": {
      "fn": "ERC20.symbol",
      "offset": [
        2403,
        2417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "867": {
      "fn": "ERC20.symbol",
      "offset": [
        2403,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D5"
    },
    "870": {
      "fn": "ERC20.symbol",
      "offset": [
        2403,
        2417
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "871": {
      "fn": "ERC20.symbol",
      "offset": [
        2403,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x834"
    },
    "874": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2403,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "876": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6442,
        6446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "879": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "880": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "DUP2",
      "path": "1"
    },
    "881": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "882": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "884": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "886": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "887": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "DUP2",
      "path": "1"
    },
    "888": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "889": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "891": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "DUP1",
      "path": "1"
    },
    "892": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "DUP4",
      "path": "1"
    },
    "893": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6510
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "DUP7",
      "path": "1"
    },
    "903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "AND",
      "path": "1"
    },
    "904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "DUP5",
      "path": "1"
    },
    "905": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "909": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "910": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "911": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6485,
        6519
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "912": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6537,
        6572
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 14
    },
    "913": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6537,
        6572
      ],
      "op": "DUP2",
      "path": "1"
    },
    "914": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6537,
        6572
      ],
      "op": "LT",
      "path": "1"
    },
    "915": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6537,
        6572
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "916": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "919": {
      "branch": 29,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "920": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "922": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "923": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "DUP2",
      "path": "1"
    },
    "931": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "934": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "936": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "DUP3",
      "path": "1"
    },
    "937": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "ADD",
      "path": "1"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "943": {
      "op": "DUP3"
    },
    "944": {
      "op": "ADD"
    },
    "945": {
      "op": "MSTORE"
    },
    "946": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "981": {
      "op": "DUP3"
    },
    "982": {
      "op": "ADD"
    },
    "983": {
      "op": "MSTORE"
    },
    "984": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "995": {
      "op": "DUP3"
    },
    "996": {
      "op": "ADD"
    },
    "997": {
      "op": "MSTORE"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD"
    },
    "1004": {
      "op": "JUMP"
    },
    "1005": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6529,
        6614
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1006": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6624,
        6691
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 15,
      "value": "0x3FC"
    },
    "1009": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6647,
        6654
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6656,
        6690
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x315"
    },
    "1014": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6675,
        6690
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6656,
        6672
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6656,
        6690
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x884"
    },
    "1019": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6656,
        6690
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1020": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6624,
        6691
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1021": {
      "op": "POP"
    },
    "1022": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6709,
        6713
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x1"
    },
    "1024": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6709,
        6713
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1025": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6349,
        6720
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6349,
        6720
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1030": {
      "fn": "ERC20.transfer",
      "offset": [
        3691,
        3863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1031": {
      "fn": "ERC20.transfer",
      "offset": [
        3777,
        3781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1033": {
      "fn": "ERC20.transfer",
      "offset": [
        3793,
        3835
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 17,
      "value": "0x265"
    },
    "1036": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1037": {
      "fn": "ERC20.transfer",
      "offset": [
        3817,
        3826
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1038": {
      "fn": "ERC20.transfer",
      "offset": [
        3828,
        3834
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1039": {
      "fn": "ERC20.transfer",
      "offset": [
        3793,
        3802
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x537"
    },
    "1042": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3793,
        3835
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1043": {
      "fn": "ERC20._approve",
      "offset": [
        9613,
        9953
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "op": "SUB"
    },
    "1052": {
      "fn": "ERC20._approve",
      "offset": [
        9714,
        9733
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 18
    },
    "1053": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        9714,
        9733
      ],
      "op": "AND",
      "path": "1"
    },
    "1054": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x475"
    },
    "1057": {
      "branch": 30,
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1058": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1060": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1067": {
      "op": "SHL"
    },
    "1068": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1069": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1072": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1074": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1075": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "ADD",
      "path": "1"
    },
    "1076": {
      "op": "MSTORE"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1079": {
      "op": "DUP1"
    },
    "1080": {
      "op": "DUP3"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1118": {
      "op": "DUP3"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "op": "MSTORE"
    },
    "1121": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1128": {
      "op": "SHL"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1131": {
      "op": "DUP3"
    },
    "1132": {
      "op": "ADD"
    },
    "1133": {
      "op": "MSTORE"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD"
    },
    "1140": {
      "op": "JUMP"
    },
    "1141": {
      "fn": "ERC20._approve",
      "offset": [
        9706,
        9774
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1148": {
      "op": "SHL"
    },
    "1149": {
      "op": "SUB"
    },
    "1150": {
      "fn": "ERC20._approve",
      "offset": [
        9792,
        9813
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 19
    },
    "1151": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        9792,
        9813
      ],
      "op": "AND",
      "path": "1"
    },
    "1152": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D6"
    },
    "1155": {
      "branch": 31,
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1156": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1158": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1165": {
      "op": "SHL"
    },
    "1166": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1167": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1170": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1172": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1173": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "ADD",
      "path": "1"
    },
    "1174": {
      "op": "MSTORE"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1179": {
      "op": "DUP3"
    },
    "1180": {
      "op": "ADD"
    },
    "1181": {
      "op": "MSTORE"
    },
    "1182": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1217": {
      "op": "DUP3"
    },
    "1218": {
      "op": "ADD"
    },
    "1219": {
      "op": "MSTORE"
    },
    "1220": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1225": {
      "op": "SHL"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1228": {
      "op": "DUP3"
    },
    "1229": {
      "op": "ADD"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1233": {
      "op": "ADD"
    },
    "1234": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD"
    },
    "1237": {
      "op": "JUMP"
    },
    "1238": {
      "fn": "ERC20._approve",
      "offset": [
        9784,
        9852
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 20
    },
    "1248": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1249": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "AND",
      "path": "1"
    },
    "1250": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1252": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1253": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1254": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1255": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1257": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1259": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1260": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1261": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1262": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1264": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1265": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1266": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9881
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1267": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1268": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1269": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "AND",
      "path": "1"
    },
    "1270": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1271": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1272": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1273": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1274": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1275": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1276": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1277": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1278": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1279": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9890
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1280": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9899
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1281": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9899
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1282": {
      "fn": "ERC20._approve",
      "offset": [
        9863,
        9899
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1283": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 21
    },
    "1284": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1285": {
      "op": "DUP5"
    },
    "1286": {
      "op": "DUP2"
    },
    "1287": {
      "op": "MSTORE"
    },
    "1288": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1321": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1322": {
      "op": "ADD"
    },
    "1323": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1325": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1326": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1327": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1328": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "SUB",
      "path": "1"
    },
    "1329": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1330": {
      "fn": "ERC20._approve",
      "offset": [
        9914,
        9946
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1331": {
      "fn": "ERC20._approve",
      "offset": [
        9613,
        9953
      ],
      "op": "POP",
      "path": "1"
    },
    "1332": {
      "fn": "ERC20._approve",
      "offset": [
        9613,
        9953
      ],
      "op": "POP",
      "path": "1"
    },
    "1333": {
      "fn": "ERC20._approve",
      "offset": [
        9613,
        9953
      ],
      "op": "POP",
      "path": "1"
    },
    "1334": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9613,
        9953
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1335": {
      "fn": "ERC20._transfer",
      "offset": [
        7194,
        7786
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1342": {
      "op": "SHL"
    },
    "1343": {
      "op": "SUB"
    },
    "1344": {
      "fn": "ERC20._transfer",
      "offset": [
        7299,
        7319
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 22
    },
    "1345": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7299,
        7319
      ],
      "op": "AND",
      "path": "1"
    },
    "1346": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59B"
    },
    "1349": {
      "branch": 32,
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1350": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1352": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1353": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1361": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1364": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1366": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1367": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "ADD",
      "path": "1"
    },
    "1368": {
      "op": "MSTORE"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1373": {
      "op": "DUP3"
    },
    "1374": {
      "op": "ADD"
    },
    "1375": {
      "op": "MSTORE"
    },
    "1376": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1411": {
      "op": "DUP3"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "op": "MSTORE"
    },
    "1414": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1422": {
      "op": "SHL"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1425": {
      "op": "DUP3"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "op": "MSTORE"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD"
    },
    "1434": {
      "op": "JUMP"
    },
    "1435": {
      "fn": "ERC20._transfer",
      "offset": [
        7291,
        7361
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "op": "SUB"
    },
    "1444": {
      "fn": "ERC20._transfer",
      "offset": [
        7379,
        7402
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 23
    },
    "1445": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7379,
        7402
      ],
      "op": "AND",
      "path": "1"
    },
    "1446": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5FD"
    },
    "1449": {
      "branch": 33,
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1450": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1452": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1459": {
      "op": "SHL"
    },
    "1460": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1461": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1464": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1466": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1467": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "ADD",
      "path": "1"
    },
    "1468": {
      "op": "MSTORE"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1473": {
      "op": "DUP3"
    },
    "1474": {
      "op": "ADD"
    },
    "1475": {
      "op": "MSTORE"
    },
    "1476": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1511": {
      "op": "DUP3"
    },
    "1512": {
      "op": "ADD"
    },
    "1513": {
      "op": "MSTORE"
    },
    "1514": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1520": {
      "op": "SHL"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1523": {
      "op": "DUP3"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "op": "MSTORE"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1528": {
      "op": "ADD"
    },
    "1529": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD"
    },
    "1532": {
      "op": "JUMP"
    },
    "1533": {
      "fn": "ERC20._transfer",
      "offset": [
        7371,
        7442
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "op": "SUB"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1543": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "AND",
      "path": "1"
    },
    "1544": {
      "fn": "ERC20._transfer",
      "offset": [
        7511,
        7532
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1546": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1547": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1549": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1551": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1553": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1556": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1557": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        7535,
        7552
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1559": {
      "fn": "ERC20._transfer",
      "offset": [
        7570,
        7593
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 24
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        7570,
        7593
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1561": {
      "fn": "ERC20._transfer",
      "offset": [
        7570,
        7593
      ],
      "op": "LT",
      "path": "1"
    },
    "1562": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7570,
        7593
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x675"
    },
    "1566": {
      "branch": 34,
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1567": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1569": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1570": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1578": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1581": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1583": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1584": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "ADD",
      "path": "1"
    },
    "1585": {
      "op": "MSTORE"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1590": {
      "op": "DUP3"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "op": "MSTORE"
    },
    "1593": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1628": {
      "op": "DUP3"
    },
    "1629": {
      "op": "ADD"
    },
    "1630": {
      "op": "MSTORE"
    },
    "1631": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1640": {
      "op": "SHL"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1643": {
      "op": "DUP3"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "op": "MSTORE"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1648": {
      "op": "ADD"
    },
    "1649": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD"
    },
    "1652": {
      "op": "JUMP"
    },
    "1653": {
      "fn": "ERC20._transfer",
      "offset": [
        7562,
        7636
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1654": {
      "fn": "ERC20._transfer",
      "offset": [
        7666,
        7688
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 25,
      "value": "0x67F"
    },
    "1657": {
      "fn": "ERC20._transfer",
      "offset": [
        7682,
        7688
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1658": {
      "fn": "ERC20._transfer",
      "offset": [
        7666,
        7679
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1659": {
      "fn": "ERC20._transfer",
      "offset": [
        7666,
        7688
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x884"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7666,
        7688
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1663": {
      "fn": "ERC20._transfer",
      "offset": [
        7666,
        7688
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1670": {
      "op": "SHL"
    },
    "1671": {
      "op": "SUB"
    },
    "1672": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "AND",
      "path": "1"
    },
    "1675": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1680": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1684": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1685": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1687": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7663
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7688
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1691": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7688
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7688
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7688
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1694": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7718
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 26
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7718
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7718
      ],
      "op": "AND",
      "path": "1"
    },
    "1697": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7718
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7718
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7718
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1700": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7718
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1701": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7718
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        7722,
        7728
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1705": {
      "fn": "ERC20._transfer",
      "offset": [
        7722,
        7728
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1706": {
      "fn": "ERC20._transfer",
      "offset": [
        7646,
        7655
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1707": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6B5"
    },
    "1710": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1711": {
      "fn": "ERC20._transfer",
      "offset": [
        7722,
        7728
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1712": {
      "fn": "ERC20._transfer",
      "offset": [
        7722,
        7728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1713": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x897"
    },
    "1716": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7698,
        7728
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1717": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1718": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1719": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "POP",
      "path": "1"
    },
    "1720": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "POP",
      "path": "1"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1722": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1723": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1724": {
      "fn": "ERC20._transfer",
      "offset": [
        7698,
        7728
      ],
      "op": "POP",
      "path": "1"
    },
    "1725": {
      "fn": "ERC20._transfer",
      "offset": [
        7761,
        7770
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 27
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1732": {
      "op": "SHL"
    },
    "1733": {
      "op": "SUB"
    },
    "1734": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "AND",
      "path": "1"
    },
    "1735": {
      "fn": "ERC20._transfer",
      "offset": [
        7753,
        7759
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "op": "SUB"
    },
    "1744": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "AND",
      "path": "1"
    },
    "1745": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1778": {
      "fn": "ERC20._transfer",
      "offset": [
        7772,
        7778
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1779": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1781": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1782": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x701"
    },
    "1785": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1786": {
      "op": "DUP2"
    },
    "1787": {
      "op": "MSTORE"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1790": {
      "op": "ADD"
    },
    "1791": {
      "op": "SWAP1"
    },
    "1792": {
      "op": "JUMP"
    },
    "1793": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1794": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1796": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1797": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1798": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1799": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "SUB",
      "path": "1"
    },
    "1800": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1801": {
      "fn": "ERC20._transfer",
      "offset": [
        7744,
        7779
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1802": {
      "fn": "ERC20._transfer",
      "offset": [
        7281,
        7786
      ],
      "op": "POP",
      "path": "1"
    },
    "1803": {
      "fn": "ERC20._transfer",
      "offset": [
        7194,
        7786
      ],
      "op": "POP",
      "path": "1"
    },
    "1804": {
      "fn": "ERC20._transfer",
      "offset": [
        7194,
        7786
      ],
      "op": "POP",
      "path": "1"
    },
    "1805": {
      "fn": "ERC20._transfer",
      "offset": [
        7194,
        7786
      ],
      "op": "POP",
      "path": "1"
    },
    "1806": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7194,
        7786
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1807": {
      "op": "JUMPDEST"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1812": {
      "op": "DUP1"
    },
    "1813": {
      "op": "DUP4"
    },
    "1814": {
      "op": "MSTORE"
    },
    "1815": {
      "op": "DUP4"
    },
    "1816": {
      "op": "MLOAD"
    },
    "1817": {
      "op": "DUP1"
    },
    "1818": {
      "op": "DUP3"
    },
    "1819": {
      "op": "DUP6"
    },
    "1820": {
      "op": "ADD"
    },
    "1821": {
      "op": "MSTORE"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1824": {
      "op": "JUMPDEST"
    },
    "1825": {
      "op": "DUP2"
    },
    "1826": {
      "op": "DUP2"
    },
    "1827": {
      "op": "LT"
    },
    "1828": {
      "op": "ISZERO"
    },
    "1829": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "1832": {
      "op": "JUMPI"
    },
    "1833": {
      "op": "DUP6"
    },
    "1834": {
      "op": "DUP2"
    },
    "1835": {
      "op": "ADD"
    },
    "1836": {
      "op": "DUP4"
    },
    "1837": {
      "op": "ADD"
    },
    "1838": {
      "op": "MLOAD"
    },
    "1839": {
      "op": "DUP6"
    },
    "1840": {
      "op": "DUP3"
    },
    "1841": {
      "op": "ADD"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1844": {
      "op": "ADD"
    },
    "1845": {
      "op": "MSTORE"
    },
    "1846": {
      "op": "DUP3"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "op": "PUSH2",
      "value": "0x720"
    },
    "1851": {
      "op": "JUMP"
    },
    "1852": {
      "op": "JUMPDEST"
    },
    "1853": {
      "op": "POP"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1858": {
      "op": "DUP3"
    },
    "1859": {
      "op": "DUP7"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "op": "ADD"
    },
    "1862": {
      "op": "MSTORE"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1867": {
      "op": "NOT"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1870": {
      "op": "DUP4"
    },
    "1871": {
      "op": "ADD"
    },
    "1872": {
      "op": "AND"
    },
    "1873": {
      "op": "DUP6"
    },
    "1874": {
      "op": "ADD"
    },
    "1875": {
      "op": "ADD"
    },
    "1876": {
      "op": "SWAP3"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "op": "POP"
    },
    "1879": {
      "op": "POP"
    },
    "1880": {
      "op": "SWAP3"
    },
    "1881": {
      "op": "SWAP2"
    },
    "1882": {
      "op": "POP"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "jump": "o",
      "op": "JUMP"
    },
    "1885": {
      "op": "JUMPDEST"
    },
    "1886": {
      "op": "DUP1"
    },
    "1887": {
      "op": "CALLDATALOAD"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1894": {
      "op": "SHL"
    },
    "1895": {
      "op": "SUB"
    },
    "1896": {
      "op": "DUP2"
    },
    "1897": {
      "op": "AND"
    },
    "1898": {
      "op": "DUP2"
    },
    "1899": {
      "op": "EQ"
    },
    "1900": {
      "op": "PUSH2",
      "value": "0x774"
    },
    "1903": {
      "op": "JUMPI"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1906": {
      "op": "DUP1"
    },
    "1907": {
      "op": "REVERT"
    },
    "1908": {
      "op": "JUMPDEST"
    },
    "1909": {
      "op": "SWAP2"
    },
    "1910": {
      "op": "SWAP1"
    },
    "1911": {
      "op": "POP"
    },
    "1912": {
      "jump": "o",
      "op": "JUMP"
    },
    "1913": {
      "op": "JUMPDEST"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1916": {
      "op": "DUP1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1919": {
      "op": "DUP4"
    },
    "1920": {
      "op": "DUP6"
    },
    "1921": {
      "op": "SUB"
    },
    "1922": {
      "op": "SLT"
    },
    "1923": {
      "op": "ISZERO"
    },
    "1924": {
      "op": "PUSH2",
      "value": "0x78C"
    },
    "1927": {
      "op": "JUMPI"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1930": {
      "op": "DUP1"
    },
    "1931": {
      "op": "REVERT"
    },
    "1932": {
      "op": "JUMPDEST"
    },
    "1933": {
      "op": "PUSH2",
      "value": "0x795"
    },
    "1936": {
      "op": "DUP4"
    },
    "1937": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "1940": {
      "jump": "i",
      "op": "JUMP"
    },
    "1941": {
      "op": "JUMPDEST"
    },
    "1942": {
      "op": "SWAP5"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1945": {
      "op": "SWAP4"
    },
    "1946": {
      "op": "SWAP1"
    },
    "1947": {
      "op": "SWAP4"
    },
    "1948": {
      "op": "ADD"
    },
    "1949": {
      "op": "CALLDATALOAD"
    },
    "1950": {
      "op": "SWAP4"
    },
    "1951": {
      "op": "POP"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "op": "POP"
    },
    "1954": {
      "jump": "o",
      "op": "JUMP"
    },
    "1955": {
      "op": "JUMPDEST"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1958": {
      "op": "DUP1"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1963": {
      "op": "DUP5"
    },
    "1964": {
      "op": "DUP7"
    },
    "1965": {
      "op": "SUB"
    },
    "1966": {
      "op": "SLT"
    },
    "1967": {
      "op": "ISZERO"
    },
    "1968": {
      "op": "PUSH2",
      "value": "0x7B8"
    },
    "1971": {
      "op": "JUMPI"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1974": {
      "op": "DUP1"
    },
    "1975": {
      "op": "REVERT"
    },
    "1976": {
      "op": "JUMPDEST"
    },
    "1977": {
      "op": "PUSH2",
      "value": "0x7C1"
    },
    "1980": {
      "op": "DUP5"
    },
    "1981": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "1984": {
      "jump": "i",
      "op": "JUMP"
    },
    "1985": {
      "op": "JUMPDEST"
    },
    "1986": {
      "op": "SWAP3"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "op": "PUSH2",
      "value": "0x7CF"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1993": {
      "op": "DUP6"
    },
    "1994": {
      "op": "ADD"
    },
    "1995": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "1998": {
      "jump": "i",
      "op": "JUMP"
    },
    "1999": {
      "op": "JUMPDEST"
    },
    "2000": {
      "op": "SWAP2"
    },
    "2001": {
      "op": "POP"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2004": {
      "op": "DUP5"
    },
    "2005": {
      "op": "ADD"
    },
    "2006": {
      "op": "CALLDATALOAD"
    },
    "2007": {
      "op": "SWAP1"
    },
    "2008": {
      "op": "POP"
    },
    "2009": {
      "op": "SWAP3"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "op": "SWAP3"
    },
    "2012": {
      "op": "POP"
    },
    "2013": {
      "op": "SWAP3"
    },
    "2014": {
      "jump": "o",
      "op": "JUMP"
    },
    "2015": {
      "op": "JUMPDEST"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2020": {
      "op": "DUP3"
    },
    "2021": {
      "op": "DUP5"
    },
    "2022": {
      "op": "SUB"
    },
    "2023": {
      "op": "SLT"
    },
    "2024": {
      "op": "ISZERO"
    },
    "2025": {
      "op": "PUSH2",
      "value": "0x7F1"
    },
    "2028": {
      "op": "JUMPI"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2031": {
      "op": "DUP1"
    },
    "2032": {
      "op": "REVERT"
    },
    "2033": {
      "op": "JUMPDEST"
    },
    "2034": {
      "op": "PUSH2",
      "value": "0x7FA"
    },
    "2037": {
      "op": "DUP3"
    },
    "2038": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "2041": {
      "jump": "i",
      "op": "JUMP"
    },
    "2042": {
      "op": "JUMPDEST"
    },
    "2043": {
      "op": "SWAP4"
    },
    "2044": {
      "op": "SWAP3"
    },
    "2045": {
      "op": "POP"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "op": "POP"
    },
    "2048": {
      "jump": "o",
      "op": "JUMP"
    },
    "2049": {
      "op": "JUMPDEST"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2052": {
      "op": "DUP1"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2055": {
      "op": "DUP4"
    },
    "2056": {
      "op": "DUP6"
    },
    "2057": {
      "op": "SUB"
    },
    "2058": {
      "op": "SLT"
    },
    "2059": {
      "op": "ISZERO"
    },
    "2060": {
      "op": "PUSH2",
      "value": "0x814"
    },
    "2063": {
      "op": "JUMPI"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2066": {
      "op": "DUP1"
    },
    "2067": {
      "op": "REVERT"
    },
    "2068": {
      "op": "JUMPDEST"
    },
    "2069": {
      "op": "PUSH2",
      "value": "0x81D"
    },
    "2072": {
      "op": "DUP4"
    },
    "2073": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "2076": {
      "jump": "i",
      "op": "JUMP"
    },
    "2077": {
      "op": "JUMPDEST"
    },
    "2078": {
      "op": "SWAP2"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "op": "PUSH2",
      "value": "0x82B"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2085": {
      "op": "DUP5"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "PUSH2",
      "value": "0x75D"
    },
    "2090": {
      "jump": "i",
      "op": "JUMP"
    },
    "2091": {
      "op": "JUMPDEST"
    },
    "2092": {
      "op": "SWAP1"
    },
    "2093": {
      "op": "POP"
    },
    "2094": {
      "op": "SWAP3"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "SWAP3"
    },
    "2097": {
      "op": "SWAP1"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "jump": "o",
      "op": "JUMP"
    },
    "2100": {
      "op": "JUMPDEST"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "DUP2"
    },
    "2104": {
      "op": "DUP2"
    },
    "2105": {
      "op": "SHR"
    },
    "2106": {
      "op": "SWAP1"
    },
    "2107": {
      "op": "DUP3"
    },
    "2108": {
      "op": "AND"
    },
    "2109": {
      "op": "DUP1"
    },
    "2110": {
      "op": "PUSH2",
      "value": "0x848"
    },
    "2113": {
      "op": "JUMPI"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2116": {
      "op": "DUP3"
    },
    "2117": {
      "op": "AND"
    },
    "2118": {
      "op": "SWAP2"
    },
    "2119": {
      "op": "POP"
    },
    "2120": {
      "op": "JUMPDEST"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2123": {
      "op": "DUP3"
    },
    "2124": {
      "op": "LT"
    },
    "2125": {
      "op": "DUP2"
    },
    "2126": {
      "op": "SUB"
    },
    "2127": {
      "op": "PUSH2",
      "value": "0x868"
    },
    "2130": {
      "op": "JUMPI"
    },
    "2131": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2141": {
      "op": "MSTORE"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2146": {
      "op": "MSTORE"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2151": {
      "op": "REVERT"
    },
    "2152": {
      "op": "JUMPDEST"
    },
    "2153": {
      "op": "POP"
    },
    "2154": {
      "op": "SWAP2"
    },
    "2155": {
      "op": "SWAP1"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "jump": "o",
      "op": "JUMP"
    },
    "2158": {
      "op": "JUMPDEST"
    },
    "2159": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2166": {
      "op": "SHL"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2169": {
      "op": "MSTORE"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2174": {
      "op": "MSTORE"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2179": {
      "op": "REVERT"
    },
    "2180": {
      "op": "JUMPDEST"
    },
    "2181": {
      "op": "DUP2"
    },
    "2182": {
      "op": "DUP2"
    },
    "2183": {
      "op": "SUB"
    },
    "2184": {
      "op": "DUP2"
    },
    "2185": {
      "op": "DUP2"
    },
    "2186": {
      "op": "GT"
    },
    "2187": {
      "op": "ISZERO"
    },
    "2188": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "2191": {
      "op": "JUMPI"
    },
    "2192": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "2195": {
      "op": "PUSH2",
      "value": "0x86E"
    },
    "2198": {
      "jump": "i",
      "op": "JUMP"
    },
    "2199": {
      "op": "JUMPDEST"
    },
    "2200": {
      "op": "DUP1"
    },
    "2201": {
      "op": "DUP3"
    },
    "2202": {
      "op": "ADD"
    },
    "2203": {
      "op": "DUP1"
    },
    "2204": {
      "op": "DUP3"
    },
    "2205": {
      "op": "GT"
    },
    "2206": {
      "op": "ISZERO"
    },
    "2207": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "2210": {
      "op": "JUMPI"
    },
    "2211": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "2214": {
      "op": "PUSH2",
      "value": "0x86E"
    },
    "2217": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "514f29594502202d20d9a5fef503166181c8c446",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_, uint totalSupply_) {\n        _name = name_;\n        _symbol = symbol_;\n        _totalSupply = totalSupply_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}",
  "sourceMap": "1300:9334:1:-:0;;;1876:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1962:5;:13;1970:5;1962;:13;:::i;:::-;-1:-1:-1;1985:7:1;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;2012:12:1;:27;-1:-1:-1;1300:9334:1;;-1:-1:-1;1300:9334:1;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:6:o;991:623::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:6;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1491:73;;;1604:2;1593:9;1589:18;1583:25;1573:35;;991:623;;;;;:::o;1619:380::-;1698:1;1694:12;;;;1741;;;1762:61;;1816:4;1808:6;1804:17;1794:27;;1762:61;1869:2;1861:6;1858:14;1838:18;1835:38;1832:161;;1915:10;1910:3;1906:20;1903:1;1896:31;1950:4;1947:1;1940:15;1978:4;1975:1;1968:15;1832:161;;1619:380;;;:::o;2130:545::-;2232:2;2227:3;2224:11;2221:448;;;2268:1;2293:5;2289:2;2282:17;2338:4;2334:2;2324:19;2408:2;2396:10;2392:19;2389:1;2385:27;2379:4;2375:38;2444:4;2432:10;2429:20;2426:47;;;-1:-1:-1;2467:4:6;2426:47;2522:2;2517:3;2513:12;2510:1;2506:20;2500:4;2496:31;2486:41;;2577:82;2595:2;2588:5;2585:13;2577:82;;;2640:17;;;2621:1;2610:13;2577:82;;;2581:3;;;2221:448;2130:545;;;:::o;2851:1352::-;2971:10;;-1:-1:-1;;;;;2993:30:6;;2990:56;;;3026:18;;:::i;:::-;3055:97;3145:6;3105:38;3137:4;3131:11;3105:38;:::i;:::-;3099:4;3055:97;:::i;:::-;3207:4;;3271:2;3260:14;;3288:1;3283:663;;;;3990:1;4007:6;4004:89;;;-1:-1:-1;4059:19:6;;;4053:26;4004:89;-1:-1:-1;;2808:1:6;2804:11;;;2800:24;2796:29;2786:40;2832:1;2828:11;;;2783:57;4106:81;;3253:944;;3283:663;2077:1;2070:14;;;2114:4;2101:18;;-1:-1:-1;;3319:20:6;;;3437:236;3451:7;3448:1;3445:14;3437:236;;;3540:19;;;3534:26;3519:42;;3632:27;;;;3600:1;3588:14;;;;3467:19;;3437:236;;;3441:3;3701:6;3692:7;3689:19;3686:201;;;3762:19;;;3756:26;-1:-1:-1;;3845:1:6;3841:14;;;3857:3;3837:24;3833:37;3829:42;3814:58;3799:74;;3686:201;-1:-1:-1;;;;;3933:1:6;3917:14;;;3913:22;3900:36;;-1:-1:-1;2851:1352:6:o;:::-;1300:9334:1;;;;;;",
  "sourcePath": "contracts/ERC20.sol",
  "type": "contract"
}