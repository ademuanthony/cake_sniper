{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approveRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        }
      ],
      "name": "authenticateSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authenticatedSeller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emmergencyWithdrawBnb",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "emmergencyWithdrawTkn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAdministrator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdministrator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "swapExactETHForTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        }
      ],
      "name": "swapExactTokensForETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Context.sol",
    "1": "contracts/DexSwap.sol",
    "4": "contracts/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/DexSwap.sol",
    "exportedSymbols": {
      "Context": [
        1701
      ],
      "DexSwap": [
        546
      ],
      "IERC20": [
        78
      ],
      "IWBNB": [
        11
      ],
      "Ownable": [
        1675
      ],
      "PancakeSwapRouter": [
        143
      ]
    },
    "id": 547,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:1"
      },
      {
        "absolutePath": "contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 547,
        "sourceUnit": 1676,
        "src": "61:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IWBNB",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [
          11
        ],
        "name": "IWBNB",
        "nameLocation": "96:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "2e1a7d4d",
            "id": 7,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "117:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "126:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "126:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "125:9:1"
            },
            "returnParameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "143:0:1"
            },
            "scope": 11,
            "src": "108:36:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "d0e30db0",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "159:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "166:2:1"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "185:0:1"
            },
            "scope": 11,
            "src": "150:36:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 547,
        "src": "86:102:1",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 78,
        "linearizedBaseContracts": [
          78
        ],
        "name": "IERC20",
        "nameLocation": "200:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "18160ddd",
            "id": 16,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "222:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "233:2:1"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "259:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "258:9:1"
            },
            "scope": 78,
            "src": "213:55:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "70a08231",
            "id": 23,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "283:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "301:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "293:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "292:17:1"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "333:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "332:9:1"
            },
            "scope": 78,
            "src": "274:68:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 32,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "357:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "374:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "366:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "393:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "385:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "365:35:1"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "435:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "434:6:1"
            },
            "scope": 78,
            "src": "348:93:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dd62ed3e",
            "id": 41,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "456:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "474:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "466:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "489:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "481:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "465:32:1"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "545:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "544:9:1"
            },
            "scope": 78,
            "src": "447:107:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 50,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "569:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "585:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "577:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "602:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "594:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "576:33:1"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "628:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "627:6:1"
            },
            "scope": 78,
            "src": "560:74:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 61,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "649:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "679:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "671:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "703:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "695:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "730:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "722:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "661:81:1"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "761:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:6:1"
            },
            "scope": 78,
            "src": "640:127:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 69,
            "name": "Transfer",
            "nameLocation": "779:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "804:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "788:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "826:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "810:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "838:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "830:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:57:1"
            },
            "src": "773:72:1"
          },
          {
            "anonymous": false,
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 77,
            "name": "Approval",
            "nameLocation": "856:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "890:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "874:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "921:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "905:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "946:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 77,
                  "src": "938:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "864:93:1"
            },
            "src": "850:108:1"
          }
        ],
        "scope": 547,
        "src": "190:770:1",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PancakeSwapRouter",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 143,
        "linearizedBaseContracts": [
          143
        ],
        "name": "PancakeSwapRouter",
        "nameLocation": "972:17:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "7ff36ab5",
            "id": 93,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokens",
            "nameLocation": "1005:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "1044:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1036:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "1085:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1066:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1066:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 82,
                    "nodeType": "ArrayTypeName",
                    "src": "1066:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1107:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1099:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1127:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1119:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1026:115:1"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1185:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1168:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1168:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 90,
                    "nodeType": "ArrayTypeName",
                    "src": "1168:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1167:26:1"
            },
            "scope": 143,
            "src": "996:198:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "4a25d94a",
            "id": 110,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapTokensForExactETH",
            "nameLocation": "1209:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1248:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1240:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "amountInMax",
                  "nameLocation": "1275:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1267:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "1315:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1296:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 98,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1296:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 99,
                    "nodeType": "ArrayTypeName",
                    "src": "1296:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1337:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1329:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1357:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1349:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1349:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1230:141:1"
            },
            "returnParameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1407:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1390:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 106,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1390:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 107,
                    "nodeType": "ArrayTypeName",
                    "src": "1390:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1389:26:1"
            },
            "scope": 143,
            "src": "1200:216:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "18cbafe5",
            "id": 127,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETH",
            "nameLocation": "1431:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "1470:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1462:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "1496:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1488:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1488:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "1537:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1518:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1518:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 116,
                    "nodeType": "ArrayTypeName",
                    "src": "1518:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1559:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1551:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1579:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1571:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1452:141:1"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1629:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "1612:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 123,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1612:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 124,
                    "nodeType": "ArrayTypeName",
                    "src": "1612:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1611:26:1"
            },
            "scope": 143,
            "src": "1422:216:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "fb3bdb41",
            "id": 142,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swapETHForExactTokens",
            "nameLocation": "1653:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1692:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1684:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "1730:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1711:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 130,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1711:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 131,
                    "nodeType": "ArrayTypeName",
                    "src": "1711:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1752:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1744:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1744:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1772:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1764:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1764:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1674:112:1"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1830:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "1813:24:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 138,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1813:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 139,
                    "nodeType": "ArrayTypeName",
                    "src": "1813:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1812:26:1"
            },
            "scope": 143,
            "src": "1644:195:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 547,
        "src": "962:879:1",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 144,
              "name": "Ownable",
              "nameLocations": [
                "1863:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1675,
              "src": "1863:7:1"
            },
            "id": 145,
            "nodeType": "InheritanceSpecifier",
            "src": "1863:7:1"
          }
        ],
        "canonicalName": "DexSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 546,
        "linearizedBaseContracts": [
          546,
          1675,
          1701
        ],
        "name": "DexSwap",
        "nameLocation": "1852:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 148,
            "mutability": "constant",
            "name": "wbnb",
            "nameLocation": "1915:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 546,
            "src": "1898:66:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 146,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1898:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
              "id": 147,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1922:42:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 151,
            "mutability": "constant",
            "name": "cakeFactory",
            "nameLocation": "1987:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 546,
            "src": "1970:73:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 149,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1970:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863413134334365333246653738663166373031396437643535316136343032664335333530633733",
              "id": 150,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2001:42:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 154,
            "mutability": "mutable",
            "name": "cakeRouter",
            "nameLocation": "2067:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 546,
            "src": "2049:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
              "typeString": "contract PancakeSwapRouter"
            },
            "typeName": {
              "id": 153,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 152,
                "name": "PancakeSwapRouter",
                "nameLocations": [
                  "2049:17:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 143,
                "src": "2049:17:1"
              },
              "referencedDeclaration": 143,
              "src": "2049:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                "typeString": "contract PancakeSwapRouter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 156,
            "mutability": "mutable",
            "name": "administrator",
            "nameLocation": "2108:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 546,
            "src": "2084:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 155,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2084:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "9dd3beee",
            "id": 160,
            "mutability": "mutable",
            "name": "authenticatedSeller",
            "nameLocation": "2159:19:1",
            "nodeType": "VariableDeclaration",
            "scope": 546,
            "src": "2127:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 159,
              "keyType": {
                "id": 157,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2135:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2127:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 158,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2146:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "2199:207:1",
              "statements": [
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 163,
                      "name": "administrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "2209:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 166,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2233:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2237:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2233:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2225:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2225:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2225:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2209:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "2209:35:1"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 171,
                        "name": "authenticatedSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "2254:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 174,
                      "indexExpression": {
                        "expression": {
                          "id": 172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2274:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2278:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2274:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2254:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2288:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2254:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2254:38:1"
                },
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 178,
                      "name": "cakeRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2303:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                        "typeString": "contract PancakeSwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2347:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 179,
                        "name": "PancakeSwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 143,
                        "src": "2316:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PancakeSwapRouter_$143_$",
                          "typeString": "type(contract PancakeSwapRouter)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2316:83:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                        "typeString": "contract PancakeSwapRouter"
                      }
                    },
                    "src": "2303:96:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                      "typeString": "contract PancakeSwapRouter"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2303:96:1"
                }
              ]
            },
            "id": 185,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2196:2:1"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2199:0:1"
            },
            "scope": 546,
            "src": "2185:221:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "2439:56:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 189,
                              "name": "wbnb",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 148,
                              "src": "2455:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 188,
                            "name": "IWBNB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2449:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IWBNB_$11_$",
                              "typeString": "type(contract IWBNB)"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2449:11:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWBNB_$11",
                            "typeString": "contract IWBNB"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2461:7:1",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10,
                        "src": "2449:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 192,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2476:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2480:5:1",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2476:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2449:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2449:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "2449:39:1"
                }
              ]
            },
            "id": 198,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2419:2:1"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:0:1"
            },
            "scope": 546,
            "src": "2412:83:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "2589:810:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 206,
                            "name": "authenticatedSeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "2620:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 209,
                          "indexExpression": {
                            "expression": {
                              "id": 207,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2640:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2644:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2640:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2620:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2655:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2620:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "737761704578616374455448466f72546f6b656e733a206d7573742062652063616c6c65642062792061757468656e746963617465642073656c6c6572",
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2673:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d21f4dedf9aa9de3b378825a2642a3e1e6fc7a0b548f4106e7f73a42e272919",
                          "typeString": "literal_string \"swapExactETHForTokens: must be called by authenticated seller\""
                        },
                        "value": "swapExactETHForTokens: must be called by authenticated seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d21f4dedf9aa9de3b378825a2642a3e1e6fc7a0b548f4106e7f73a42e272919",
                          "typeString": "literal_string \"swapExactETHForTokens: must be called by authenticated seller\""
                        }
                      ],
                      "id": 205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2599:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:147:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:147:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 222,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2809:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexSwap_$546",
                                    "typeString": "contract DexSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexSwap_$546",
                                    "typeString": "contract DexSwap"
                                  }
                                ],
                                "id": 221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2801:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 220,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2801:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2801:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 217,
                                  "name": "wbnb",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "2785:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 216,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78,
                                "src": "2778:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2778:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$78",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2791:9:1",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "2778:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2778:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 225,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "2818:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2778:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446578537761703a20496e7375666669656e742042616c616e6365",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b5099d4959e16843321877a03ab11b92ff76351f79010e0da5603a4fe7c14a2",
                          "typeString": "literal_string \"DexSwap: Insuffient Balance\""
                        },
                        "value": "DexSwap: Insuffient Balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b5099d4959e16843321877a03ab11b92ff76351f79010e0da5603a4fe7c14a2",
                          "typeString": "literal_string \"DexSwap: Insuffient Balance\""
                        }
                      ],
                      "id": 215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2757:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2757:122:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2757:122:1"
                },
                {
                  "assignments": [
                    234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 234,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "2906:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 304,
                      "src": "2889:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2889:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 233,
                        "nodeType": "ArrayTypeName",
                        "src": "2889:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 240,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2927:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2913:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2917:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 236,
                        "nodeType": "ArrayTypeName",
                        "src": "2917:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2889:40:1"
                },
                {
                  "expression": {
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 241,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "2939:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 243,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2944:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2939:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 244,
                      "name": "wbnb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "2949:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2939:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "2939:14:1"
                },
                {
                  "expression": {
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 247,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "2963:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 249,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2968:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2963:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 250,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2973:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2963:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "2963:18:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 256,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "3038:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 257,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "3060:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 260,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3086:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexSwap_$546",
                              "typeString": "contract DexSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexSwap_$546",
                              "typeString": "contract DexSwap"
                            }
                          ],
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3078:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 258,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3078:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3078:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 262,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3105:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3111:9:1",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3105:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313235",
                          "id": 264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3123:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_125_by_1",
                            "typeString": "int_const 125"
                          },
                          "value": "125"
                        },
                        "src": "3105:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 253,
                        "name": "cakeRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2992:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                          "typeString": "contract PancakeSwapRouter"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3003:21:1",
                      "memberName": "swapETHForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 142,
                      "src": "2992:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2992:144:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "2992:144:1"
                },
                {
                  "expression": {
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 268,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "3147:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3152:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3147:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 271,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "3157:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3147:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "3147:18:1"
                },
                {
                  "expression": {
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 274,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "3175:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 276,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3180:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3175:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 277,
                      "name": "wbnb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3185:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3175:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "3175:14:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 289,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3281:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexSwap_$546",
                                  "typeString": "contract DexSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DexSwap_$546",
                                  "typeString": "contract DexSwap"
                                }
                              ],
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3273:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 287,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3273:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3273:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 284,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 202,
                                "src": "3253:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 283,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "3246:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3246:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$78",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3263:9:1",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "3246:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3246:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3301:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 293,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "3316:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 296,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3342:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexSwap_$546",
                              "typeString": "contract DexSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexSwap_$546",
                              "typeString": "contract DexSwap"
                            }
                          ],
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3334:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3334:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3334:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 298,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3361:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3367:9:1",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3361:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313235",
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3379:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_125_by_1",
                            "typeString": "int_const 125"
                          },
                          "value": "125"
                        },
                        "src": "3361:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 280,
                        "name": "cakeRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "3200:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                          "typeString": "contract PancakeSwapRouter"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3211:21:1",
                      "memberName": "swapExactTokensForETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "3200:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:192:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:192:1"
                }
              ]
            },
            "functionSelector": "2ede25b8",
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokens",
            "nameLocation": "2510:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "2540:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "2532:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "2558:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "2550:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2531:36:1"
            },
            "returnParameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2589:0:1"
            },
            "scope": 546,
            "src": "2501:898:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "3493:811:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 313,
                            "name": "authenticatedSeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "3524:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 316,
                          "indexExpression": {
                            "expression": {
                              "id": 314,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3544:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3548:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3544:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3524:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3559:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3524:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "737761704578616374546f6b656e73466f724554483a206d7573742062652063616c6c65642062792061757468656e746963617465642073656c6c6572",
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3577:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf7c5b785883288226272e36d1d959f8b3fe7b0fcadd15dd0ad1e2ae40093a53",
                          "typeString": "literal_string \"swapExactTokensForETH: must be called by authenticated seller\""
                        },
                        "value": "swapExactTokensForETH: must be called by authenticated seller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf7c5b785883288226272e36d1d959f8b3fe7b0fcadd15dd0ad1e2ae40093a53",
                          "typeString": "literal_string \"swapExactTokensForETH: must be called by authenticated seller\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3503:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3503:147:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "3503:147:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 329,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3713:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexSwap_$546",
                                    "typeString": "contract DexSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexSwap_$546",
                                    "typeString": "contract DexSwap"
                                  }
                                ],
                                "id": 328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3705:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 327,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3705:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3705:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 324,
                                  "name": "wbnb",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 148,
                                  "src": "3689:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 323,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78,
                                "src": "3682:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3682:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$78",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3695:9:1",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "3682:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3682:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 332,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3722:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3682:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446578537761703a20496e7375666669656e742042616c616e6365",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3744:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b5099d4959e16843321877a03ab11b92ff76351f79010e0da5603a4fe7c14a2",
                          "typeString": "literal_string \"DexSwap: Insuffient Balance\""
                        },
                        "value": "DexSwap: Insuffient Balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b5099d4959e16843321877a03ab11b92ff76351f79010e0da5603a4fe7c14a2",
                          "typeString": "literal_string \"DexSwap: Insuffient Balance\""
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3661:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:122:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3661:122:1"
                },
                {
                  "assignments": [
                    341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "3811:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 411,
                      "src": "3794:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3794:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 340,
                        "nodeType": "ArrayTypeName",
                        "src": "3794:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3832:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3818:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3822:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 343,
                        "nodeType": "ArrayTypeName",
                        "src": "3822:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3818:16:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3794:40:1"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 348,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "3844:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 350,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3849:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3844:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 351,
                      "name": "wbnb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "3854:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3844:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "3844:14:1"
                },
                {
                  "expression": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 354,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "3868:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 356,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3873:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3868:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 357,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "3878:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3868:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "3868:18:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 363,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "3943:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 364,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "3965:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 367,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3991:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexSwap_$546",
                              "typeString": "contract DexSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexSwap_$546",
                              "typeString": "contract DexSwap"
                            }
                          ],
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3983:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 365,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3983:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3983:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 369,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4010:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4016:9:1",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4010:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313235",
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4028:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_125_by_1",
                            "typeString": "int_const 125"
                          },
                          "value": "125"
                        },
                        "src": "4010:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 360,
                        "name": "cakeRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "3897:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                          "typeString": "contract PancakeSwapRouter"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3908:21:1",
                      "memberName": "swapETHForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 142,
                      "src": "3897:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3897:144:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:144:1"
                },
                {
                  "expression": {
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 375,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "4052:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 377,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4057:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4052:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 378,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "4062:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4052:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:18:1"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 381,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "4080:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 383,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4085:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4080:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 384,
                      "name": "wbnb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "4090:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4080:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "4080:14:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 396,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4186:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexSwap_$546",
                                  "typeString": "contract DexSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DexSwap_$546",
                                  "typeString": "contract DexSwap"
                                }
                              ],
                              "id": 395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4178:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 394,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4178:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4178:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 391,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "4158:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 390,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "4151:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4151:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$78",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4168:9:1",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "4151:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4151:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4206:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 400,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 341,
                        "src": "4221:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 403,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4247:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DexSwap_$546",
                              "typeString": "contract DexSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DexSwap_$546",
                              "typeString": "contract DexSwap"
                            }
                          ],
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4239:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 401,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4239:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4239:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 405,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4266:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4272:9:1",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4266:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313235",
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4284:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_125_by_1",
                            "typeString": "int_const 125"
                          },
                          "value": "125"
                        },
                        "src": "4266:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 387,
                        "name": "cakeRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "4105:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                          "typeString": "contract PancakeSwapRouter"
                        }
                      },
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4116:21:1",
                      "memberName": "swapExactTokensForETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 127,
                      "src": "4105:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4105:192:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:192:1"
                }
              ]
            },
            "functionSelector": "cf230167",
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForETH",
            "nameLocation": "3414:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "3444:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "3436:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "3462:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "3454:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3435:36:1"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3493:0:1"
            },
            "scope": 546,
            "src": "3405:899:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "4373:67:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 425,
                            "name": "cakeRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "4413:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                              "typeString": "contract PancakeSwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PancakeSwapRouter_$143",
                              "typeString": "contract PancakeSwapRouter"
                            }
                          ],
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4405:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 423,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4405:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4405:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 427,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "4426:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 420,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "4390:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 419,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "4383:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4383:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$78",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4397:7:1",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "4383:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4383:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "4383:50:1"
                }
              ]
            },
            "functionSelector": "88a95e61",
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveRouter",
            "nameLocation": "4319:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4341:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "4333:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4333:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 416,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4356:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "4348:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4348:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4332:31:1"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4373:0:1"
            },
            "scope": 546,
            "src": "4310:130:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 444,
              "nodeType": "Block",
              "src": "4510:52:1",
              "statements": [
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 438,
                        "name": "authenticatedSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "4520:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 440,
                      "indexExpression": {
                        "id": 439,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "4540:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4520:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4551:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4520:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4520:35:1"
                }
              ]
            },
            "functionSelector": "ae38dc87",
            "id": 445,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 435,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4500:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1624,
                  "src": "4500:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4500:9:1"
              }
            ],
            "name": "authenticateSeller",
            "nameLocation": "4455:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "4482:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "4474:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4473:17:1"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4510:0:1"
            },
            "scope": 546,
            "src": "4446:116:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "4682:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 452,
                    "name": "administrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "4699:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 451,
                  "id": 453,
                  "nodeType": "Return",
                  "src": "4692:20:1"
                }
              ]
            },
            "functionSelector": "16967407",
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 448,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 447,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4634:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1624,
                  "src": "4634:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4634:9:1"
              }
            ],
            "name": "getAdministrator",
            "nameLocation": "4577:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4593:2:1"
            },
            "returnParameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "4661:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4661:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4660:17:1"
            },
            "scope": 546,
            "src": "4568:151:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "4848:110:1",
              "statements": [
                {
                  "expression": {
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 464,
                      "name": "administrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "4858:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 465,
                      "name": "_newAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "4874:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4858:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "4858:25:1"
                },
                {
                  "expression": {
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 468,
                        "name": "authenticatedSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "4893:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 470,
                      "indexExpression": {
                        "id": 469,
                        "name": "_newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "4913:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4893:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4926:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4893:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "4893:37:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4947:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 463,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "4940:11:1"
                }
              ]
            },
            "functionSelector": "df8089ef",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 460,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 459,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4803:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1624,
                  "src": "4803:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "4803:9:1"
              }
            ],
            "name": "setAdministrator",
            "nameLocation": "4734:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "_newAdmin",
                  "nameLocation": "4767:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4751:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4751:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4750:27:1"
            },
            "returnParameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 462,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "4835:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "4830:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4830:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4829:14:1"
            },
            "scope": 546,
            "src": "4725:233:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "5220:221:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 495,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5284:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DexSwap_$546",
                                    "typeString": "contract DexSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DexSwap_$546",
                                    "typeString": "contract DexSwap"
                                  }
                                ],
                                "id": 494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5276:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 493,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5276:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5276:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 490,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 479,
                                  "src": "5258:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 489,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78,
                                "src": "5251:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5251:14:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$78",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5266:9:1",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "5251:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5251:39:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 498,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 481,
                          "src": "5294:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5251:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f75676820746f6b656e7320696e20636f6e7472616374",
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5315:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22c1d316391a6245bd224e1a19d2efbddd93fdd9feb2f3672cc1db3beac1acb7",
                          "typeString": "literal_string \"not enough tokens in contract\""
                        },
                        "value": "not enough tokens in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22c1d316391a6245bd224e1a19d2efbddd93fdd9feb2f3672cc1db3beac1acb7",
                          "typeString": "literal_string \"not enough tokens in contract\""
                        }
                      ],
                      "id": 488,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5230:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5230:126:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "5230:126:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 507,
                        "name": "administrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "5390:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 508,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "5405:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 504,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "5373:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 503,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5366:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5366:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$78",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5381:8:1",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "5366:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5366:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "5366:47:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5430:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 487,
                  "id": 512,
                  "nodeType": "Return",
                  "src": "5423:11:1"
                }
              ]
            },
            "functionSelector": "8f761e09",
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 484,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 483,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5175:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1624,
                  "src": "5175:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5175:9:1"
              }
            ],
            "name": "emmergencyWithdrawTkn",
            "nameLocation": "5095:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5125:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "5117:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5141:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "5133:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5133:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5116:33:1"
            },
            "returnParameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5207:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "5202:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5202:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5201:14:1"
            },
            "scope": 546,
            "src": "5086:355:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "5603:164:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 524,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5629:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DexSwap_$546",
                                  "typeString": "contract DexSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DexSwap_$546",
                                  "typeString": "contract DexSwap"
                                }
                              ],
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5621:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 522,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5621:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5621:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5635:7:1",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "5621:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5645:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5621:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6e74726163742068617320616e20656d70747920424e422062616c616e6365",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5648:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0779393ca3b1977d03b9f4361283eb02fdc5d49236a9984427fe191373585553",
                          "typeString": "literal_string \"contract has an empty BNB balance\""
                        },
                        "value": "contract has an empty BNB balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0779393ca3b1977d03b9f4361283eb02fdc5d49236a9984427fe191373585553",
                          "typeString": "literal_string \"contract has an empty BNB balance\""
                        }
                      ],
                      "id": 521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5613:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5613:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "5613:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 537,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5725:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DexSwap_$546",
                                "typeString": "contract DexSwap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DexSwap_$546",
                                "typeString": "contract DexSwap"
                              }
                            ],
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5717:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 535,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5717:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5717:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5731:7:1",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5717:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 532,
                        "name": "administrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "5694:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5708:8:1",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5694:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5694:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "5694:45:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5756:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 520,
                  "id": 543,
                  "nodeType": "Return",
                  "src": "5749:11:1"
                }
              ]
            },
            "functionSelector": "a4d3924c",
            "id": 545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 517,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 516,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5570:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1624,
                  "src": "5570:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "5570:9:1"
              }
            ],
            "name": "emmergencyWithdrawBnb",
            "nameLocation": "5537:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5558:2:1"
            },
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5594:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "5589:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5589:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5588:14:1"
            },
            "scope": 546,
            "src": "5528:239:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 547,
        "src": "1843:3926:1",
        "usedErrors": []
      }
    ],
    "src": "36:5734:1"
  },
  "bytecode": "",
  "bytecodeSha1": "993b6d2ad112c946831276e9f49a4ab3177f26c5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "DexSwap",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {
        "DexSwap.emmergencyWithdrawBnb": {
          "31": [
            5621,
            5646,
            true
          ]
        },
        "DexSwap.emmergencyWithdrawTkn": {
          "30": [
            5251,
            5301,
            true
          ]
        },
        "DexSwap.swapExactETHForTokens": {
          "28": [
            2620,
            2659,
            true
          ],
          "29": [
            2778,
            2826,
            true
          ]
        },
        "DexSwap.swapExactTokensForETH": {
          "32": [
            3524,
            3563,
            true
          ]
        }
      },
      "4": {
        "Ownable.transferOwnership": {
          "33": [
            1586,
            1608,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "2": [
            676,
            702
          ]
        }
      },
      "1": {
        "DexSwap.<receive>": {
          "0": [
            2449,
            2488
          ]
        },
        "DexSwap.approveRouter": {
          "14": [
            4383,
            4433
          ]
        },
        "DexSwap.authenticateSeller": {
          "21": [
            4520,
            4555
          ]
        },
        "DexSwap.emmergencyWithdrawBnb": {
          "18": [
            5613,
            5684
          ],
          "19": [
            5694,
            5739
          ],
          "20": [
            5749,
            5760
          ]
        },
        "DexSwap.emmergencyWithdrawTkn": {
          "15": [
            5230,
            5356
          ],
          "16": [
            5366,
            5413
          ],
          "17": [
            5423,
            5434
          ]
        },
        "DexSwap.getAdministrator": {
          "3": [
            4692,
            4712
          ]
        },
        "DexSwap.setAdministrator": {
          "23": [
            4858,
            4883
          ],
          "24": [
            4893,
            4930
          ]
        },
        "DexSwap.swapExactETHForTokens": {
          "4": [
            2599,
            2746
          ],
          "5": [
            2757,
            2879
          ],
          "6": [
            2939,
            2953
          ],
          "7": [
            2963,
            2981
          ],
          "8": [
            2992,
            3136
          ],
          "9": [
            3147,
            3165
          ],
          "10": [
            3175,
            3189
          ],
          "11": [
            3200,
            3392
          ]
        },
        "DexSwap.swapExactTokensForETH": {
          "22": [
            3503,
            3650
          ]
        }
      },
      "4": {
        "Ownable.owner": {
          "1": [
            637,
            650
          ]
        },
        "Ownable.renounceOwnership": {
          "12": [
            1268,
            1313
          ],
          "13": [
            1323,
            1342
          ]
        },
        "Ownable.transferOwnership": {
          "25": [
            1578,
            1651
          ],
          "26": [
            1661,
            1704
          ],
          "27": [
            1714,
            1731
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "IWBNB",
    "Ownable",
    "PancakeSwapRouter"
  ],
  "deployedBytecode": "6080604052600436106100ab5760003560e01c80639dd3beee116100645780639dd3beee146101ef578063a4d3924c1461021f578063ae38dc8714610234578063cf23016714610254578063df8089ef14610274578063f2fde38b1461029457600080fd5b8063169674071461011a5780632ede25b81461014c578063715018a61461016c57806388a95e61146101815780638da5cb5b146101a15780638f761e09146101bf57600080fd5b366101155773bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c6001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156100ff57600080fd5b505af1158015610113573d6000803e3d6000fd5b005b600080fd5b34801561012657600080fd5b5061012f6102b4565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015857600080fd5b50610113610167366004610c11565b6102f8565b34801561017857600080fd5b506101136106b1565b34801561018d57600080fd5b5061011361019c366004610c41565b610725565b3480156101ad57600080fd5b506000546001600160a01b031661012f565b3480156101cb57600080fd5b506101df6101da366004610c41565b6107a1565b6040519015158152602001610143565b3480156101fb57600080fd5b506101df61020a366004610c6d565b60036020526000908152604090205460ff1681565b34801561022b57600080fd5b506101df610907565b34801561024057600080fd5b5061011361024f366004610c6d565b6109cd565b34801561026057600080fd5b5061011361026f366004610c11565b610a1b565b34801561028057600080fd5b506101df61028f366004610c6d565b610aa5565b3480156102a057600080fd5b506101136102af366004610c6d565b610b0f565b600080546001600160a01b031633146102e85760405162461bcd60e51b81526004016102df90610c91565b60405180910390fd5b506002546001600160a01b031690565b3360009081526003602052604090205460ff1615156001146103825760405162461bcd60e51b815260206004820152603d60248201527f737761704578616374455448466f72546f6b656e733a206d757374206265206360448201527f616c6c65642062792061757468656e746963617465642073656c6c657200000060648201526084016102df565b6040516370a0823160e01b8152306004820152829073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c906370a0823190602401602060405180830381865afa1580156103d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f79190610cc6565b116104445760405162461bcd60e51b815260206004820152601b60248201527f446578537761703a20496e7375666669656e742042616c616e6365000000000060448201526064016102df565b60408051600280825260608201835260009260208301908036833701905050905073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c8160008151811061048d5761048d610cf5565b60200260200101906001600160a01b031690816001600160a01b03168152505081816001815181106104c1576104c1610cf5565b6001600160a01b0392831660209182029290920101526001541663fb3bdb418483306104ee42607d610d0b565b6040518563ffffffff1660e01b815260040161050d9493929190610d70565b6000604051808303816000875af115801561052c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105549190810190610da5565b50818160008151811061056957610569610cf5565b60200260200101906001600160a01b031690816001600160a01b03168152505073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c816001815181106105b1576105b1610cf5565b6001600160a01b0392831660209182029290920101526001546040516370a0823160e01b8152306004820152908216916318cbafe591908516906370a0823190602401602060405180830381865afa158015610611573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106359190610cc6565b6000843061064442607d610d0b565b6040518663ffffffff1660e01b8152600401610664959493929190610e63565b6000604051808303816000875af1158015610683573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ab9190810190610da5565b50505050565b6000546001600160a01b031633146106db5760405162461bcd60e51b81526004016102df90610c91565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190610e9f565b505050565b600080546001600160a01b031633146107cc5760405162461bcd60e51b81526004016102df90610c91565b6040516370a0823160e01b815230600482015282906001600160a01b038516906370a0823190602401602060405180830381865afa158015610812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108369190610cc6565b10156108845760405162461bcd60e51b815260206004820152601d60248201527f6e6f7420656e6f75676820746f6b656e7320696e20636f6e747261637400000060448201526064016102df565b60025460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018490529084169063a9059cbb906044016020604051808303816000875af11580156108d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb9190610e9f565b50600190505b92915050565b600080546001600160a01b031633146109325760405162461bcd60e51b81526004016102df90610c91565b6000471161098c5760405162461bcd60e51b815260206004820152602160248201527f636f6e74726163742068617320616e20656d70747920424e422062616c616e636044820152606560f81b60648201526084016102df565b6002546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156109c5573d6000803e3d6000fd5b506001905090565b6000546001600160a01b031633146109f75760405162461bcd60e51b81526004016102df90610c91565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b3360009081526003602052604090205460ff1615156001146103825760405162461bcd60e51b815260206004820152603d60248201527f737761704578616374546f6b656e73466f724554483a206d757374206265206360448201527f616c6c65642062792061757468656e746963617465642073656c6c657200000060648201526084016102df565b600080546001600160a01b03163314610ad05760405162461bcd60e51b81526004016102df90610c91565b50600280546001600160a01b0319166001600160a01b039290921691821790556000908152600360205260409020805460ff1916600190811790915590565b6000546001600160a01b03163314610b395760405162461bcd60e51b81526004016102df90610c91565b6001600160a01b038116610b9e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102df565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381168114610c0e57600080fd5b50565b60008060408385031215610c2457600080fd5b823591506020830135610c3681610bf9565b809150509250929050565b60008060408385031215610c5457600080fd5b8235610c5f81610bf9565b946020939093013593505050565b600060208284031215610c7f57600080fd5b8135610c8a81610bf9565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610cd857600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8082018082111561090157634e487b7160e01b600052601160045260246000fd5b600081518084526020808501945080840160005b83811015610d655781516001600160a01b031687529582019590820190600101610d40565b509495945050505050565b848152608060208201526000610d896080830186610d2c565b6001600160a01b03949094166040830152506060015292915050565b60006020808385031215610db857600080fd5b825167ffffffffffffffff80821115610dd057600080fd5b818501915085601f830112610de457600080fd5b815181811115610df657610df6610cdf565b8060051b604051601f19603f83011681018181108582111715610e1b57610e1b610cdf565b604052918252848201925083810185019188831115610e3957600080fd5b938501935b82851015610e5757845184529385019392850192610e3e565b98975050505050505050565b85815284602082015260a060408201526000610e8260a0830186610d2c565b6001600160a01b0394909416606083015250608001529392505050565b600060208284031215610eb157600080fd5b81518015158114610c8a57600080fdfea26469706673582212205e4d8966d5cc63fc3a07ab1dd8167c8ef643e99a779ade826a47d33daaa7dadb64736f6c63430008110033",
  "deployedSourceMap": "1843:3926:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1922:42;-1:-1:-1;;;;;2449:19:1;;2476:9;2449:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1843:3926;;;;4568:151;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;194:32:6;;;176:51;;164:2;149:18;4568:151:1;;;;;;;;2501:898;;;;;;;;;;-1:-1:-1;2501:898:1;;;;;:::i;:::-;;:::i;1204:145:4:-;;;;;;;;;;;;;:::i;4310:130:1:-;;;;;;;;;;-1:-1:-1;4310:130:1;;;;;:::i;:::-;;:::i;572:85:4:-;;;;;;;;;;-1:-1:-1;618:7:4;644:6;-1:-1:-1;;;;;644:6:4;572:85;;5086:355:1;;;;;;;;;;-1:-1:-1;5086:355:1;;;;;:::i;:::-;;:::i;:::-;;;1387:14:6;;1380:22;1362:41;;1350:2;1335:18;5086:355:1;1222:187:6;2127:51:1;;;;;;;;;;-1:-1:-1;2127:51:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;5528:239;;;;;;;;;;;;;:::i;4446:116::-;;;;;;;;;;-1:-1:-1;4446:116:1;;;;;:::i;:::-;;:::i;3405:899::-;;;;;;;;;;-1:-1:-1;3405:899:1;;;;;:::i;:::-;;:::i;4725:233::-;;;;;;;;;;-1:-1:-1;4725:233:1;;;;;:::i;:::-;;:::i;1498:240:4:-;;;;;;;;;;-1:-1:-1;1498:240:4;;;;;:::i;:::-;;:::i;4568:151:1:-;4661:15;644:6:4;;-1:-1:-1;;;;;644:6:4;691:10:0;784:23:4;776:68;;;;-1:-1:-1;;;776:68:4;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4699:13:1::1;::::0;-1:-1:-1;;;;;4699:13:1::1;4568:151:::0;:::o;2501:898::-;2640:10;2620:31;;;;:19;:31;;;;;;;;:39;;:31;:39;2599:147;;;;-1:-1:-1;;;2599:147:1;;2489:2:6;2599:147:1;;;2471:21:6;2528:2;2508:18;;;2501:30;2567:34;2547:18;;;2540:62;2638:31;2618:18;;;2611:59;2687:19;;2599:147:1;2287:425:6;2599:147:1;2778:37;;-1:-1:-1;;;2778:37:1;;2809:4;2778:37;;;176:51:6;2818:8:1;;1922:42;;2778:22;;149:18:6;;2778:37:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;2757:122;;;;-1:-1:-1;;;2757:122:1;;3108:2:6;2757:122:1;;;3090:21:6;3147:2;3127:18;;;3120:30;3186:29;3166:18;;;3159:57;3233:18;;2757:122:1;2906:351:6;2757:122:1;2913:16;;;2927:1;2913:16;;;;;;;;2889:21;;2913:16;;;;;;;;;;-1:-1:-1;2913:16:1;2889:40;;1922:42;2939:4;2944:1;2939:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;2939:14:1;;;-1:-1:-1;;;;;2939:14:1;;;;;2973:8;2963:4;2968:1;2963:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2963:18:1;;;:7;;;;;;;;;:18;2992:10;;;:32;3038:8;3060:4;3086;3105:21;:15;3123:3;3105:21;:::i;:::-;2992:144;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2992:144:1;;;;;;;;;;;;:::i;:::-;;3157:8;3147:4;3152:1;3147:7;;;;;;;;:::i;:::-;;;;;;:18;-1:-1:-1;;;;;3147:18:1;;;-1:-1:-1;;;;;3147:18:1;;;;;1922:42;3175:4;3180:1;3175:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3175:14:1;;;:7;;;;;;;;;:14;3200:10;;3246:41;;-1:-1:-1;;;3246:41:1;;3281:4;3246:41;;;176:51:6;3200:10:1;;;;:32;;3246:26;;;;;;149:18:6;;3246:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3301:1;3316:4;3342;3361:21;:15;3379:3;3361:21;:::i;:::-;3200:192;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3200:192:1;;;;;;;;;;;;:::i;:::-;;2589:810;2501:898;;:::o;1204:145:4:-;618:7;644:6;-1:-1:-1;;;;;644:6:4;691:10:0;784:23:4;776:68;;;;-1:-1:-1;;;776:68:4;;;;;;;:::i;:::-;1310:1:::1;1294:6:::0;;1273:40:::1;::::0;-1:-1:-1;;;;;1294:6:4;;::::1;::::0;1273:40:::1;::::0;1310:1;;1273:40:::1;1340:1;1323:19:::0;;-1:-1:-1;;;;;;1323:19:4::1;::::0;;1204:145::o;4310:130:1:-;4413:10;;4383:50;;-1:-1:-1;;;4383:50:1;;-1:-1:-1;;;;;4413:10:1;;;4383:50;;;6597:51:6;6664:18;;;6657:34;;;4383:21:1;;;;;;6570:18:6;;4383:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4310:130;;:::o;5086:355::-;5202:12;644:6:4;;-1:-1:-1;;;;;644:6:4;691:10:0;784:23:4;776:68;;;;-1:-1:-1;;;776:68:4;;;;;;;:::i;:::-;5251:39:1::1;::::0;-1:-1:-1;;;5251:39:1;;5284:4:::1;5251:39;::::0;::::1;176:51:6::0;5294:7:1;;-1:-1:-1;;;;;5251:24:1;::::1;::::0;::::1;::::0;149:18:6;;5251:39:1::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;5230:126;;;::::0;-1:-1:-1;;;5230:126:1;;7186:2:6;5230:126:1::1;::::0;::::1;7168:21:6::0;7225:2;7205:18;;;7198:30;7264:31;7244:18;;;7237:59;7313:18;;5230:126:1::1;6984:353:6::0;5230:126:1::1;5390:13;::::0;5366:47:::1;::::0;-1:-1:-1;;;5366:47:1;;-1:-1:-1;;;;;5390:13:1;;::::1;5366:47;::::0;::::1;6597:51:6::0;6664:18;;;6657:34;;;5366:23:1;;::::1;::::0;::::1;::::0;6570:18:6;;5366:47:1::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5430:4;5423:11;;854:1:4;5086:355:1::0;;;;:::o;5528:239::-;5589:12;644:6:4;;-1:-1:-1;;;;;644:6:4;691:10:0;784:23:4;776:68;;;;-1:-1:-1;;;776:68:4;;;;;;;:::i;:::-;5645:1:1::1;5621:21;:25;5613:71;;;::::0;-1:-1:-1;;;5613:71:1;;7831:2:6;5613:71:1::1;::::0;::::1;7813:21:6::0;7870:2;7850:18;;;7843:30;7909:34;7889:18;;;7882:62;-1:-1:-1;;;7960:18:6;;;7953:31;8001:19;;5613:71:1::1;7629:397:6::0;5613:71:1::1;5694:13;::::0;:45:::1;::::0;-1:-1:-1;;;;;5694:13:1;;::::1;::::0;5717:21:::1;5694:45:::0;::::1;;;::::0;:13:::1;:45:::0;:13;:45;5717:21;5694:13;:45;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5756:4;5749:11;;5528:239:::0;:::o;4446:116::-;618:7:4;644:6;-1:-1:-1;;;;;644:6:4;691:10:0;784:23:4;776:68;;;;-1:-1:-1;;;776:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;4520:28:1::1;;::::0;;;:19:::1;:28;::::0;;;;:35;;-1:-1:-1;;4520:35:1::1;4551:4;4520:35;::::0;;4446:116::o;3405:899::-;3544:10;3524:31;;;;:19;:31;;;;;;;;:39;;:31;:39;3503:147;;;;-1:-1:-1;;;3503:147:1;;8233:2:6;3503:147:1;;;8215:21:6;8272:2;8252:18;;;8245:30;8311:34;8291:18;;;8284:62;8382:31;8362:18;;;8355:59;8431:19;;3503:147:1;8031:425:6;4725:233:1;4830:12;644:6:4;;-1:-1:-1;;;;;644:6:4;691:10:0;784:23:4;776:68;;;;-1:-1:-1;;;776:68:4;;;;;;;:::i;:::-;-1:-1:-1;4858:13:1::1;:25:::0;;-1:-1:-1;;;;;;4858:25:1::1;-1:-1:-1::0;;;;;4858:25:1;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;4893:30:1;;;:19:::1;:30;::::0;;;;:37;;-1:-1:-1;;4893:37:1::1;-1:-1:-1::0;4893:37:1;;::::1;::::0;;;-1:-1:-1;4725:233:1:o;1498:240:4:-;618:7;644:6;-1:-1:-1;;;;;644:6:4;691:10:0;784:23:4;776:68;;;;-1:-1:-1;;;776:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;1586:22:4;::::1;1578:73;;;::::0;-1:-1:-1;;;1578:73:4;;8663:2:6;1578:73:4::1;::::0;::::1;8645:21:6::0;8702:2;8682:18;;;8675:30;8741:34;8721:18;;;8714:62;-1:-1:-1;;;8792:18:6;;;8785:36;8838:19;;1578:73:4::1;8461:402:6::0;1578:73:4::1;1687:6;::::0;;1666:38:::1;::::0;-1:-1:-1;;;;;1666:38:4;;::::1;::::0;1687:6;::::1;::::0;1666:38:::1;::::0;::::1;1714:6;:17:::0;;-1:-1:-1;;;;;;1714:17:4::1;-1:-1:-1::0;;;;;1714:17:4;;;::::1;::::0;;;::::1;::::0;;1498:240::o;238:131:6:-;-1:-1:-1;;;;;313:31:6;;303:42;;293:70;;359:1;356;349:12;293:70;238:131;:::o;374:315::-;442:6;450;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;555:9;542:23;532:33;;615:2;604:9;600:18;587:32;628:31;653:5;628:31;:::i;:::-;678:5;668:15;;;374:315;;;;;:::o;694:::-;762:6;770;823:2;811:9;802:7;798:23;794:32;791:52;;;839:1;836;829:12;791:52;878:9;865:23;897:31;922:5;897:31;:::i;:::-;947:5;999:2;984:18;;;;971:32;;-1:-1:-1;;;694:315:6:o;1414:247::-;1473:6;1526:2;1514:9;1505:7;1501:23;1497:32;1494:52;;;1542:1;1539;1532:12;1494:52;1581:9;1568:23;1600:31;1625:5;1600:31;:::i;:::-;1650:5;1414:247;-1:-1:-1;;;1414:247:6:o;1926:356::-;2128:2;2110:21;;;2147:18;;;2140:30;2206:34;2201:2;2186:18;;2179:62;2273:2;2258:18;;1926:356::o;2717:184::-;2787:6;2840:2;2828:9;2819:7;2815:23;2811:32;2808:52;;;2856:1;2853;2846:12;2808:52;-1:-1:-1;2879:16:6;;2717:184;-1:-1:-1;2717:184:6:o;3262:127::-;3323:10;3318:3;3314:20;3311:1;3304:31;3354:4;3351:1;3344:15;3378:4;3375:1;3368:15;3394:127;3455:10;3450:3;3446:20;3443:1;3436:31;3486:4;3483:1;3476:15;3510:4;3507:1;3500:15;3526:222;3591:9;;;3612:10;;;3609:133;;;3664:10;3659:3;3655:20;3652:1;3645:31;3699:4;3696:1;3689:15;3727:4;3724:1;3717:15;3753:461;3806:3;3844:5;3838:12;3871:6;3866:3;3859:19;3897:4;3926:2;3921:3;3917:12;3910:19;;3963:2;3956:5;3952:14;3984:1;3994:195;4008:6;4005:1;4002:13;3994:195;;;4073:13;;-1:-1:-1;;;;;4069:39:6;4057:52;;4129:12;;;;4164:15;;;;4105:1;4023:9;3994:195;;;-1:-1:-1;4205:3:6;;3753:461;-1:-1:-1;;;;;3753:461:6:o;4219:502::-;4482:6;4471:9;4464:25;4525:3;4520:2;4509:9;4505:18;4498:31;4445:4;4546:57;4598:3;4587:9;4583:19;4575:6;4546:57;:::i;:::-;-1:-1:-1;;;;;4639:32:6;;;;4634:2;4619:18;;4612:60;-1:-1:-1;4703:2:6;4688:18;4681:34;4538:65;4219:502;-1:-1:-1;;4219:502:6:o;4726:1105::-;4821:6;4852:2;4895;4883:9;4874:7;4870:23;4866:32;4863:52;;;4911:1;4908;4901:12;4863:52;4944:9;4938:16;4973:18;5014:2;5006:6;5003:14;5000:34;;;5030:1;5027;5020:12;5000:34;5068:6;5057:9;5053:22;5043:32;;5113:7;5106:4;5102:2;5098:13;5094:27;5084:55;;5135:1;5132;5125:12;5084:55;5164:2;5158:9;5186:2;5182;5179:10;5176:36;;;5192:18;;:::i;:::-;5238:2;5235:1;5231:10;5270:2;5264:9;5333:2;5329:7;5324:2;5320;5316:11;5312:25;5304:6;5300:38;5388:6;5376:10;5373:22;5368:2;5356:10;5353:18;5350:46;5347:72;;;5399:18;;:::i;:::-;5435:2;5428:22;5485:18;;;5519:15;;;;-1:-1:-1;5561:11:6;;;5557:20;;;5589:19;;;5586:39;;;5621:1;5618;5611:12;5586:39;5645:11;;;;5665:135;5681:6;5676:3;5673:15;5665:135;;;5747:10;;5735:23;;5698:12;;;;5778;;;;5665:135;;;5819:6;4726:1105;-1:-1:-1;;;;;;;;4726:1105:6:o;5836:582::-;6135:6;6124:9;6117:25;6178:6;6173:2;6162:9;6158:18;6151:34;6221:3;6216:2;6205:9;6201:18;6194:31;6098:4;6242:57;6294:3;6283:9;6279:19;6271:6;6242:57;:::i;:::-;-1:-1:-1;;;;;6335:32:6;;;;6330:2;6315:18;;6308:60;-1:-1:-1;6399:3:6;6384:19;6377:35;6234:65;5836:582;-1:-1:-1;;;5836:582:6:o;6702:277::-;6769:6;6822:2;6810:9;6801:7;6797:23;6793:32;6790:52;;;6838:1;6835;6828:12;6790:52;6870:9;6864:16;6923:5;6916:13;6909:21;6902:5;6899:32;6889:60;;6945:1;6942;6935:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    1843,
    5769
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9DD3BEEE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9DD3BEEE EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA4D3924C EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xAE38DC87 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xCF230167 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDF8089EF EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x16967407 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x2EDE25B8 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x88A95E61 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x8F761E09 EQ PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x115 JUMPI PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x113 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x6B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x907 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0xC11 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x28F CALLDATASIZE PUSH1 0x4 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x113 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737761704578616374455448466F72546F6B656E733A206D7573742062652063 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C6C65642062792061757468656E746963617465642073656C6C6572000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST GT PUSH2 0x444 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446578537761703A20496E7375666669656E742042616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD AND PUSH4 0xFB3BDB41 DUP5 DUP4 ADDRESS PUSH2 0x4EE TIMESTAMP PUSH1 0x7D PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x52C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x554 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDA5 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x569 JUMPI PUSH2 0x569 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH20 0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5B1 JUMPI PUSH2 0x5B1 PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND SWAP2 PUSH4 0x18CBAFE5 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 DUP5 ADDRESS PUSH2 0x644 TIMESTAMP PUSH1 0x7D PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x664 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x683 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6AB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDA5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x778 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0xE9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x812 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x836 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST LT ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420656E6F75676820746F6B656E7320696E20636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8FB SWAP2 SWAP1 PUSH2 0xE9F JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E74726163742068617320616E20656D70747920424E422062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x737761704578616374546F6B656E73466F724554483A206D7573742062652063 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C6C65642062792061757468656E746963617465642073656C6C6572000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP1 PUSH2 0xC91 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP1 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC36 DUP2 PUSH2 0xBF9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xC5F DUP2 PUSH2 0xBF9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC8A DUP2 PUSH2 0xBF9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x901 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD65 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD40 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xD89 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xDF6 JUMPI PUSH2 0xDF6 PUSH2 0xCDF JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1B PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xE57 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xE3E JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xE82 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xC8A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0x4D DUP10 PUSH7 0xD5CC63FC3A07AB SAR 0xD8 AND PUSH29 0x8EF643E99A779ADE826A47D33DAAA7DADB64736F6C6343000811003300 ",
  "pcMap": {
    "0": {
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "12": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9DD3BEEE"
    },
    "25": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "GT",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9DD3BEEE"
    },
    "36": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EF"
    },
    "40": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA4D3924C"
    },
    "47": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21F"
    },
    "51": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xAE38DC87"
    },
    "58": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x234"
    },
    "62": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xCF230167"
    },
    "69": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x254"
    },
    "73": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDF8089EF"
    },
    "80": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274"
    },
    "84": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "86": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x294"
    },
    "95": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "96": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "REVERT",
      "path": "1"
    },
    "100": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x16967407"
    },
    "107": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "108": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "111": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2EDE25B8"
    },
    "118": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "119": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14C"
    },
    "122": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "124": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x715018A6"
    },
    "129": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "130": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16C"
    },
    "133": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "134": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x88A95E61"
    },
    "140": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x181"
    },
    "144": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "145": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "146": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A1"
    },
    "155": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "156": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "157": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8F761E09"
    },
    "162": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "EQ",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BF"
    },
    "166": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "167": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "REVERT",
      "path": "1"
    },
    "171": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "172": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "173": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x115"
    },
    "176": {
      "fn": null,
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "177": {
      "offset": [
        1922,
        1964
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "204": {
      "op": "SHL"
    },
    "205": {
      "op": "SUB"
    },
    "206": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2468
      ],
      "op": "AND",
      "path": "1",
      "statement": 0
    },
    "207": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2468
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD0E30DB0"
    },
    "212": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2476,
        2485
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "213": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "215": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "216": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP3",
      "path": "1"
    },
    "217": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "222": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "AND",
      "path": "1"
    },
    "223": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "225": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "SHL",
      "path": "1"
    },
    "226": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP2",
      "path": "1"
    },
    "227": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "228": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "230": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "ADD",
      "path": "1"
    },
    "231": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "233": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "235": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "236": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "237": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP4",
      "path": "1"
    },
    "238": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "SUB",
      "path": "1"
    },
    "239": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP2",
      "path": "1"
    },
    "240": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP6",
      "path": "1"
    },
    "241": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP9",
      "path": "1"
    },
    "242": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "243": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "244": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "245": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "246": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "247": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFF"
    },
    "250": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "251": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "253": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "254": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "REVERT",
      "path": "1"
    },
    "255": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "256": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "POP",
      "path": "1"
    },
    "257": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "GAS",
      "path": "1"
    },
    "258": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "CALL",
      "path": "1"
    },
    "259": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "260": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "261": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "262": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x113"
    },
    "265": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "266": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "267": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "269": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "DUP1",
      "path": "1"
    },
    "270": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "271": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "272": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "274": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "REVERT",
      "path": "1"
    },
    "275": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "276": {
      "fn": "DexSwap.<receive>",
      "offset": [
        2449,
        2488
      ],
      "op": "STOP",
      "path": "1"
    },
    "277": {
      "offset": [
        1843,
        5769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "278": {
      "fn": "DexSwap.<receive>",
      "offset": [
        1843,
        5769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "280": {
      "fn": "DexSwap.<receive>",
      "offset": [
        1843,
        5769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "281": {
      "first_revert": true,
      "fn": "DexSwap.<receive>",
      "offset": [
        1843,
        5769
      ],
      "op": "REVERT",
      "path": "1"
    },
    "282": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "283": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "284": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "DUP1",
      "path": "1"
    },
    "285": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "286": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x126"
    },
    "289": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "290": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "292": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "DUP1",
      "path": "1"
    },
    "293": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "REVERT",
      "path": "1"
    },
    "294": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "295": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "POP",
      "path": "1"
    },
    "296": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12F"
    },
    "299": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "302": {
      "fn": "DexSwap.getAdministrator",
      "jump": "i",
      "offset": [
        4568,
        4719
      ],
      "op": "JUMP",
      "path": "1"
    },
    "303": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "304": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "306": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "313": {
      "op": "SHL"
    },
    "314": {
      "op": "SUB"
    },
    "315": {
      "op": "SWAP1"
    },
    "316": {
      "op": "SWAP2"
    },
    "317": {
      "op": "AND"
    },
    "318": {
      "op": "DUP2"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "322": {
      "op": "ADD"
    },
    "323": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "324": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "326": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "327": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "DUP1",
      "path": "1"
    },
    "328": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "329": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "SUB",
      "path": "1"
    },
    "330": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "331": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "RETURN",
      "path": "1"
    },
    "332": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "333": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "334": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "DUP1",
      "path": "1"
    },
    "335": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "336": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x158"
    },
    "339": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "340": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "342": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "DUP1",
      "path": "1"
    },
    "343": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "REVERT",
      "path": "1"
    },
    "344": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "345": {
      "op": "POP"
    },
    "346": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x113"
    },
    "349": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x167"
    },
    "352": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "353": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "355": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC11"
    },
    "358": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        2501,
        3399
      ],
      "op": "JUMP",
      "path": "1"
    },
    "359": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "360": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F8"
    },
    "363": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        2501,
        3399
      ],
      "op": "JUMP",
      "path": "1"
    },
    "364": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "365": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "366": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "367": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "368": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x178"
    },
    "371": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "372": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "374": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "DUP1",
      "path": "4"
    },
    "375": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "REVERT",
      "path": "4"
    },
    "376": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "377": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "POP",
      "path": "4"
    },
    "378": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x113"
    },
    "381": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B1"
    },
    "384": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1204,
        1349
      ],
      "op": "JUMP",
      "path": "4"
    },
    "385": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "386": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "387": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "DUP1",
      "path": "1"
    },
    "388": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "389": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18D"
    },
    "392": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "393": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "395": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "DUP1",
      "path": "1"
    },
    "396": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "REVERT",
      "path": "1"
    },
    "397": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x113"
    },
    "402": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19C"
    },
    "405": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "406": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "408": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC41"
    },
    "411": {
      "fn": "DexSwap.approveRouter",
      "jump": "i",
      "offset": [
        4310,
        4440
      ],
      "op": "JUMP",
      "path": "1"
    },
    "412": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "413": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x725"
    },
    "416": {
      "fn": "DexSwap.approveRouter",
      "jump": "i",
      "offset": [
        4310,
        4440
      ],
      "op": "JUMP",
      "path": "1"
    },
    "417": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "418": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "419": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "DUP1",
      "path": "4"
    },
    "420": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "421": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AD"
    },
    "424": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "425": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "427": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "DUP1",
      "path": "4"
    },
    "428": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "REVERT",
      "path": "4"
    },
    "429": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "430": {
      "op": "POP"
    },
    "431": {
      "fn": "Ownable.owner",
      "offset": [
        618,
        625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "433": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "SLOAD",
      "path": "4",
      "statement": 1
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "op": "SUB"
    },
    "442": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "AND",
      "path": "4"
    },
    "443": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12F"
    },
    "446": {
      "fn": "Ownable.owner",
      "offset": [
        572,
        657
      ],
      "op": "JUMP",
      "path": "4"
    },
    "447": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "448": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "449": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "DUP1",
      "path": "1"
    },
    "450": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "451": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CB"
    },
    "454": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "455": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "457": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "DUP1",
      "path": "1"
    },
    "458": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "REVERT",
      "path": "1"
    },
    "459": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "460": {
      "op": "POP"
    },
    "461": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DF"
    },
    "464": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DA"
    },
    "467": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "468": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "470": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC41"
    },
    "473": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "jump": "i",
      "offset": [
        5086,
        5441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "474": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "475": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7A1"
    },
    "478": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "jump": "i",
      "offset": [
        5086,
        5441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "479": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "480": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "482": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "483": {
      "op": "SWAP1"
    },
    "484": {
      "op": "ISZERO"
    },
    "485": {
      "op": "ISZERO"
    },
    "486": {
      "op": "DUP2"
    },
    "487": {
      "op": "MSTORE"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "490": {
      "op": "ADD"
    },
    "491": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x143"
    },
    "494": {
      "op": "JUMP"
    },
    "495": {
      "offset": [
        2127,
        2178
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "496": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "497": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "DUP1",
      "path": "1"
    },
    "498": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "499": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FB"
    },
    "502": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "503": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "505": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "DUP1",
      "path": "1"
    },
    "506": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "REVERT",
      "path": "1"
    },
    "507": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "508": {
      "op": "POP"
    },
    "509": {
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DF"
    },
    "512": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20A"
    },
    "515": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "516": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "518": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC6D"
    },
    "521": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "jump": "i",
      "offset": [
        2127,
        2178
      ],
      "op": "JUMP",
      "path": "1"
    },
    "522": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "523": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "525": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "527": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "528": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "530": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "531": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "DUP2",
      "path": "1"
    },
    "532": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "533": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "535": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "536": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "537": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "538": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "540": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "AND",
      "path": "1"
    },
    "541": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "DUP2",
      "path": "1"
    },
    "542": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        2127,
        2178
      ],
      "op": "JUMP",
      "path": "1"
    },
    "543": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "544": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "545": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "546": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "547": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22B"
    },
    "550": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "551": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "553": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "554": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "REVERT",
      "path": "1"
    },
    "555": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "556": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "POP",
      "path": "1"
    },
    "557": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DF"
    },
    "560": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x907"
    },
    "563": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "jump": "i",
      "offset": [
        5528,
        5767
      ],
      "op": "JUMP",
      "path": "1"
    },
    "564": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "565": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "566": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "567": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "568": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x240"
    },
    "571": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "572": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "574": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "575": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "REVERT",
      "path": "1"
    },
    "576": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "577": {
      "op": "POP"
    },
    "578": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x113"
    },
    "581": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24F"
    },
    "584": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "585": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "587": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC6D"
    },
    "590": {
      "fn": "DexSwap.authenticateSeller",
      "jump": "i",
      "offset": [
        4446,
        4562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "591": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "592": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9CD"
    },
    "595": {
      "fn": "DexSwap.authenticateSeller",
      "jump": "i",
      "offset": [
        4446,
        4562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "596": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "597": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "598": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "DUP1",
      "path": "1"
    },
    "599": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "600": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x260"
    },
    "603": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "604": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "606": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "DUP1",
      "path": "1"
    },
    "607": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "REVERT",
      "path": "1"
    },
    "608": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "609": {
      "op": "POP"
    },
    "610": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x113"
    },
    "613": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26F"
    },
    "616": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "617": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "619": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC11"
    },
    "622": {
      "fn": "DexSwap.swapExactTokensForETH",
      "jump": "i",
      "offset": [
        3405,
        4304
      ],
      "op": "JUMP",
      "path": "1"
    },
    "623": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "624": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA1B"
    },
    "627": {
      "fn": "DexSwap.swapExactTokensForETH",
      "jump": "i",
      "offset": [
        3405,
        4304
      ],
      "op": "JUMP",
      "path": "1"
    },
    "628": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "629": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "630": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "DUP1",
      "path": "1"
    },
    "631": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "632": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x280"
    },
    "635": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "636": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "638": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "DUP1",
      "path": "1"
    },
    "639": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "REVERT",
      "path": "1"
    },
    "640": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "641": {
      "op": "POP"
    },
    "642": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DF"
    },
    "645": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28F"
    },
    "648": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "649": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "651": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC6D"
    },
    "654": {
      "fn": "DexSwap.setAdministrator",
      "jump": "i",
      "offset": [
        4725,
        4958
      ],
      "op": "JUMP",
      "path": "1"
    },
    "655": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "656": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA5"
    },
    "659": {
      "fn": "DexSwap.setAdministrator",
      "jump": "i",
      "offset": [
        4725,
        4958
      ],
      "op": "JUMP",
      "path": "1"
    },
    "660": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "661": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "662": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "DUP1",
      "path": "4"
    },
    "663": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "664": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A0"
    },
    "667": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "668": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "DUP1",
      "path": "4"
    },
    "671": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "REVERT",
      "path": "4"
    },
    "672": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x113"
    },
    "677": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AF"
    },
    "680": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "681": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "683": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC6D"
    },
    "686": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1498,
        1738
      ],
      "op": "JUMP",
      "path": "4"
    },
    "687": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB0F"
    },
    "691": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1498,
        1738
      ],
      "op": "JUMP",
      "path": "4"
    },
    "692": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "693": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4661,
        4676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "695": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "DUP1",
      "path": "4"
    },
    "696": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "703": {
      "op": "SHL"
    },
    "704": {
      "op": "SUB"
    },
    "705": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "AND",
      "path": "4"
    },
    "706": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "707": {
      "offset": [
        784,
        807
      ],
      "op": "EQ",
      "path": "4"
    },
    "708": {
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E8"
    },
    "711": {
      "offset": [
        776,
        844
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "712": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "714": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "721": {
      "op": "SHL"
    },
    "722": {
      "offset": [
        776,
        844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "723": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "724": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "726": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "ADD",
      "path": "4"
    },
    "727": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "730": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "731": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC91"
    },
    "734": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        776,
        844
      ],
      "op": "JUMP",
      "path": "4"
    },
    "735": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "736": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "738": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "739": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "DUP1",
      "path": "4"
    },
    "740": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "741": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SUB",
      "path": "4"
    },
    "742": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "743": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "744": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4699,
        4712
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x2"
    },
    "748": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4699,
        4712
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4699,
        4712
      ],
      "op": "AND",
      "path": "1"
    },
    "758": {
      "fn": "DexSwap.getAdministrator",
      "offset": [
        4568,
        4719
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "759": {
      "fn": "DexSwap.getAdministrator",
      "jump": "o",
      "offset": [
        4568,
        4719
      ],
      "op": "JUMP",
      "path": "1"
    },
    "760": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "761": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2640,
        2650
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 4
    },
    "762": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "764": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "765": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "DUP2",
      "path": "1"
    },
    "766": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "767": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "769": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "771": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "772": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "774": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "775": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "776": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "777": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "779": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "AND",
      "path": "1"
    },
    "780": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2659
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "781": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2659
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "782": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "784": {
      "branch": 28,
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2620,
        2659
      ],
      "op": "EQ",
      "path": "1"
    },
    "785": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x382"
    },
    "788": {
      "branch": 28,
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "789": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "791": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "792": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "796": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "798": {
      "op": "SHL"
    },
    "799": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "DUP2",
      "path": "1"
    },
    "800": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "803": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "805": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "DUP3",
      "path": "1"
    },
    "806": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "ADD",
      "path": "1"
    },
    "807": {
      "op": "MSTORE"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "812": {
      "op": "DUP3"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "op": "MSTORE"
    },
    "815": {
      "op": "PUSH32",
      "value": "0x737761704578616374455448466F72546F6B656E733A206D7573742062652063"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "850": {
      "op": "DUP3"
    },
    "851": {
      "op": "ADD"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH32",
      "value": "0x616C6C65642062792061757468656E746963617465642073656C6C6572000000"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "888": {
      "op": "DUP3"
    },
    "889": {
      "op": "ADD"
    },
    "890": {
      "op": "MSTORE"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "893": {
      "op": "ADD"
    },
    "894": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF"
    },
    "897": {
      "op": "JUMP"
    },
    "898": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2599,
        2746
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "899": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x40"
    },
    "901": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "902": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP2",
      "path": "1"
    },
    "911": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "912": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2809,
        2813
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "913": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "915": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP3",
      "path": "1"
    },
    "916": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "ADD",
      "path": "1"
    },
    "917": {
      "op": "MSTORE"
    },
    "918": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2818,
        2826
      ],
      "op": "DUP3",
      "path": "1"
    },
    "919": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2818,
        2826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "920": {
      "offset": [
        1922,
        1964
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C"
    },
    "941": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        1922,
        1964
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "942": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2800
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "947": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2800
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "953": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "955": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "956": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP1",
      "path": "1"
    },
    "957": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP4",
      "path": "1"
    },
    "958": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "SUB",
      "path": "1"
    },
    "959": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP2",
      "path": "1"
    },
    "960": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP7",
      "path": "1"
    },
    "961": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "GAS",
      "path": "1"
    },
    "962": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "963": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "964": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP1",
      "path": "1"
    },
    "965": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "966": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D3"
    },
    "969": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "970": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "971": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "973": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP1",
      "path": "1"
    },
    "974": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "975": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "976": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "978": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "REVERT",
      "path": "1"
    },
    "979": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "980": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "POP",
      "path": "1"
    },
    "981": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "POP",
      "path": "1"
    },
    "982": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "POP",
      "path": "1"
    },
    "983": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "POP",
      "path": "1"
    },
    "984": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "986": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "987": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "988": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "990": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "NOT",
      "path": "1"
    },
    "991": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "993": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP3",
      "path": "1"
    },
    "994": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "ADD",
      "path": "1"
    },
    "995": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "AND",
      "path": "1"
    },
    "996": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP3",
      "path": "1"
    },
    "997": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "ADD",
      "path": "1"
    },
    "998": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP1",
      "path": "1"
    },
    "999": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1001": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1002": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "POP",
      "path": "1"
    },
    "1003": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1004": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "ADD",
      "path": "1"
    },
    "1005": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1006": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F7"
    },
    "1009": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1010": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1011": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC6"
    },
    "1014": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        2778,
        2815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1015": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1016": {
      "branch": 29,
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2778,
        2826
      ],
      "op": "GT",
      "path": "1"
    },
    "1017": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x444"
    },
    "1020": {
      "branch": 29,
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1021": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1023": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1024": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1030": {
      "op": "SHL"
    },
    "1031": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1032": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1035": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1037": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1038": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "ADD",
      "path": "1"
    },
    "1039": {
      "op": "MSTORE"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1044": {
      "op": "DUP3"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH32",
      "value": "0x446578537761703A20496E7375666669656E742042616C616E63650000000000"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1082": {
      "op": "DUP3"
    },
    "1083": {
      "op": "ADD"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1087": {
      "op": "ADD"
    },
    "1088": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF"
    },
    "1091": {
      "op": "JUMP"
    },
    "1092": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2757,
        2879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1093": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1095": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1096": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1097": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2927,
        2928
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1099": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1100": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1101": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1102": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1104": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1105": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "ADD",
      "path": "1"
    },
    "1106": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1107": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1108": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2889,
        2910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1110": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2889,
        2910
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1111": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1113": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1114": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "ADD",
      "path": "1"
    },
    "1115": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1116": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1117": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1118": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1119": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "1120": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "ADD",
      "path": "1"
    },
    "1121": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1122": {
      "op": "POP"
    },
    "1123": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2913,
        2929
      ],
      "op": "POP",
      "path": "1"
    },
    "1124": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2889,
        2929
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1125": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2889,
        2929
      ],
      "op": "POP",
      "path": "1"
    },
    "1126": {
      "offset": [
        1922,
        1964
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C"
    },
    "1147": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2943
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 6
    },
    "1148": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2944,
        2945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1150": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1151": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1152": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1153": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "LT",
      "path": "1"
    },
    "1154": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x48D"
    },
    "1157": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1158": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x48D"
    },
    "1161": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF5"
    },
    "1164": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        2939,
        2946
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1165": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1166": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1168": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "MUL",
      "path": "1"
    },
    "1169": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1171": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "ADD",
      "path": "1"
    },
    "1172": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2946
      ],
      "op": "ADD",
      "path": "1"
    },
    "1173": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "SUB"
    },
    "1182": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2953
      ],
      "op": "AND",
      "path": "1"
    },
    "1183": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1184": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2953
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1191": {
      "op": "SHL"
    },
    "1192": {
      "op": "SUB"
    },
    "1193": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2953
      ],
      "op": "AND",
      "path": "1"
    },
    "1194": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2953
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1195": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2953
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1196": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2953
      ],
      "op": "POP",
      "path": "1"
    },
    "1197": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2939,
        2953
      ],
      "op": "POP",
      "path": "1"
    },
    "1198": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2973,
        2981
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 7
    },
    "1199": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2967
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1200": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2968,
        2969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1202": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1203": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1204": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1205": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "LT",
      "path": "1"
    },
    "1206": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C1"
    },
    "1209": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1210": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C1"
    },
    "1213": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF5"
    },
    "1216": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        2963,
        2970
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1217": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "SUB"
    },
    "1226": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2981
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1227": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2981
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1228": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2981
      ],
      "op": "AND",
      "path": "1"
    },
    "1229": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1231": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1232": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1233": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "MUL",
      "path": "1"
    },
    "1234": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1235": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1236": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1237": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "ADD",
      "path": "1"
    },
    "1238": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2970
      ],
      "op": "ADD",
      "path": "1"
    },
    "1239": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2963,
        2981
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1240": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3002
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x1"
    },
    "1242": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3002
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1243": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3002
      ],
      "op": "AND",
      "path": "1"
    },
    "1244": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3024
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFB3BDB41"
    },
    "1249": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3038,
        3046
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1250": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3060,
        3064
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1251": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3086,
        3090
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1252": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3105,
        3126
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4EE"
    },
    "1255": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3105,
        3120
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "1256": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3123,
        3126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7D"
    },
    "1258": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3105,
        3126
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD0B"
    },
    "1261": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        3105,
        3126
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1262": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3105,
        3126
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1263": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1265": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1266": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1267": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1272": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "AND",
      "path": "1"
    },
    "1273": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1275": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SHL",
      "path": "1"
    },
    "1276": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1277": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1278": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1280": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "ADD",
      "path": "1"
    },
    "1281": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50D"
    },
    "1284": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1285": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1286": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1287": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1288": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1289": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD70"
    },
    "1292": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        2992,
        3136
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1293": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1294": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1296": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1298": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1299": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1300": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1301": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SUB",
      "path": "1"
    },
    "1302": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1303": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1305": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1306": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "GAS",
      "path": "1"
    },
    "1307": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "CALL",
      "path": "1"
    },
    "1308": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1309": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1310": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1311": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52C"
    },
    "1314": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1315": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1316": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1318": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1319": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1320": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1321": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1323": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1324": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1325": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "POP",
      "path": "1"
    },
    "1326": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "POP",
      "path": "1"
    },
    "1327": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "POP",
      "path": "1"
    },
    "1328": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "POP",
      "path": "1"
    },
    "1329": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1331": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1332": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1333": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1335": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1336": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1337": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1339": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1340": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1341": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1342": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "ADD",
      "path": "1"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1345": {
      "op": "NOT"
    },
    "1346": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "AND",
      "path": "1"
    },
    "1347": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1348": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "ADD",
      "path": "1"
    },
    "1349": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1351": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1352": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x554"
    },
    "1355": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1356": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1357": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1358": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "ADD",
      "path": "1"
    },
    "1359": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1360": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA5"
    },
    "1363": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        2992,
        3136
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1364": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1365": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2992,
        3136
      ],
      "op": "POP",
      "path": "1"
    },
    "1366": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3157,
        3165
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 9
    },
    "1367": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3151
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1368": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3152,
        3153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1370": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1371": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1372": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1373": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "LT",
      "path": "1"
    },
    "1374": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x569"
    },
    "1377": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1378": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x569"
    },
    "1381": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF5"
    },
    "1384": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        3147,
        3154
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1385": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1386": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1388": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "MUL",
      "path": "1"
    },
    "1389": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1391": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "ADD",
      "path": "1"
    },
    "1392": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3154
      ],
      "op": "ADD",
      "path": "1"
    },
    "1393": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1400": {
      "op": "SHL"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3165
      ],
      "op": "AND",
      "path": "1"
    },
    "1403": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1404": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "SUB"
    },
    "1413": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3165
      ],
      "op": "AND",
      "path": "1"
    },
    "1414": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3165
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1415": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3165
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1416": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3165
      ],
      "op": "POP",
      "path": "1"
    },
    "1417": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3147,
        3165
      ],
      "op": "POP",
      "path": "1"
    },
    "1418": {
      "offset": [
        1922,
        1964
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0xBB4CDB9CBD36B01BD1CBAEBF2DE08D9173BC095C"
    },
    "1439": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3179
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 10
    },
    "1440": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3180,
        3181
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1442": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1443": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1444": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1445": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "LT",
      "path": "1"
    },
    "1446": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B1"
    },
    "1449": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1450": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B1"
    },
    "1453": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF5"
    },
    "1456": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        3175,
        3182
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1457": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1464": {
      "op": "SHL"
    },
    "1465": {
      "op": "SUB"
    },
    "1466": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3189
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1467": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3189
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1468": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3189
      ],
      "op": "AND",
      "path": "1"
    },
    "1469": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1471": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1472": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1473": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "MUL",
      "path": "1"
    },
    "1474": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1475": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1476": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1477": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "ADD",
      "path": "1"
    },
    "1478": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3182
      ],
      "op": "ADD",
      "path": "1"
    },
    "1479": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3175,
        3189
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1480": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3210
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x1"
    },
    "1482": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3210
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1483": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1485": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1486": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1493": {
      "op": "SHL"
    },
    "1494": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1495": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1496": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3281,
        3285
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1497": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1499": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1500": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "ADD",
      "path": "1"
    },
    "1501": {
      "op": "MSTORE"
    },
    "1502": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3210
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1503": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3210
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1504": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3210
      ],
      "op": "AND",
      "path": "1"
    },
    "1505": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3210
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1506": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3232
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18CBAFE5"
    },
    "1511": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3232
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1512": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3272
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1513": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3272
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1514": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3272
      ],
      "op": "AND",
      "path": "1"
    },
    "1515": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3272
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1516": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3272
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "1521": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3272
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1527": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1529": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1530": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1531": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1532": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "SUB",
      "path": "1"
    },
    "1533": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1534": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1535": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "GAS",
      "path": "1"
    },
    "1536": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1537": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1538": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1539": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1540": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x611"
    },
    "1543": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1544": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1545": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1547": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1548": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1549": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1550": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1552": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1553": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1554": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "POP",
      "path": "1"
    },
    "1555": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "POP",
      "path": "1"
    },
    "1556": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "POP",
      "path": "1"
    },
    "1557": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "POP",
      "path": "1"
    },
    "1558": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1560": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1561": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1562": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1564": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "NOT",
      "path": "1"
    },
    "1565": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1567": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1568": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "ADD",
      "path": "1"
    },
    "1569": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "AND",
      "path": "1"
    },
    "1570": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1571": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "ADD",
      "path": "1"
    },
    "1572": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1573": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1575": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1576": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "POP",
      "path": "1"
    },
    "1577": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1578": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "ADD",
      "path": "1"
    },
    "1579": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1580": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x635"
    },
    "1583": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1584": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1585": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC6"
    },
    "1588": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        3246,
        3287
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1589": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3246,
        3287
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1590": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3301,
        3302
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1592": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3316,
        3320
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1593": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3342,
        3346
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1594": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3361,
        3382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x644"
    },
    "1597": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3361,
        3376
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "1598": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3379,
        3382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7D"
    },
    "1600": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3361,
        3382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD0B"
    },
    "1603": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        3361,
        3382
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1604": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3361,
        3382
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1605": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1607": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1608": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1609": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1614": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "AND",
      "path": "1"
    },
    "1615": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1617": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SHL",
      "path": "1"
    },
    "1618": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1619": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1620": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1622": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "ADD",
      "path": "1"
    },
    "1623": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x664"
    },
    "1626": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1627": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1628": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1629": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1630": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1631": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1632": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE63"
    },
    "1635": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        3200,
        3392
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1636": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1637": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1639": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1641": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1642": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1643": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1644": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SUB",
      "path": "1"
    },
    "1645": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1646": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1648": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1649": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "GAS",
      "path": "1"
    },
    "1650": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "CALL",
      "path": "1"
    },
    "1651": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1652": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1653": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1654": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x683"
    },
    "1657": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1658": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1659": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1661": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1662": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1663": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1664": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1666": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1667": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1668": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "POP",
      "path": "1"
    },
    "1669": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "POP",
      "path": "1"
    },
    "1670": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "POP",
      "path": "1"
    },
    "1671": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "POP",
      "path": "1"
    },
    "1672": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1674": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1675": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1676": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1678": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1679": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1680": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1682": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1683": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1684": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1685": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "ADD",
      "path": "1"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1688": {
      "op": "NOT"
    },
    "1689": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "AND",
      "path": "1"
    },
    "1690": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1691": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "ADD",
      "path": "1"
    },
    "1692": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1694": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1695": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AB"
    },
    "1698": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1699": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1700": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1701": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "ADD",
      "path": "1"
    },
    "1702": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1703": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA5"
    },
    "1706": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "i",
      "offset": [
        3200,
        3392
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1707": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1708": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        3200,
        3392
      ],
      "op": "POP",
      "path": "1"
    },
    "1709": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2589,
        3399
      ],
      "op": "POP",
      "path": "1"
    },
    "1710": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "POP",
      "path": "1"
    },
    "1711": {
      "fn": "DexSwap.swapExactETHForTokens",
      "offset": [
        2501,
        3399
      ],
      "op": "POP",
      "path": "1"
    },
    "1712": {
      "fn": "DexSwap.swapExactETHForTokens",
      "jump": "o",
      "offset": [
        2501,
        3399
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1713": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1204,
        1349
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1714": {
      "fn": "Ownable.owner",
      "offset": [
        618,
        625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1716": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "AND",
      "path": "4"
    },
    "1726": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1727": {
      "offset": [
        784,
        807
      ],
      "op": "EQ",
      "path": "4"
    },
    "1728": {
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6DB"
    },
    "1731": {
      "offset": [
        776,
        844
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1732": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1734": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "offset": [
        776,
        844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1743": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1744": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1746": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "ADD",
      "path": "4"
    },
    "1747": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "1750": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1751": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC91"
    },
    "1754": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        776,
        844
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1755": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1756": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1310,
        1311
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 12,
      "value": "0x0"
    },
    "1758": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1294,
        1300
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1759": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1294,
        1300
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1760": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1762": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1313
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1769": {
      "op": "SHL"
    },
    "1770": {
      "op": "SUB"
    },
    "1771": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1294,
        1300
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1772": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1294,
        1300
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1773": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1294,
        1300
      ],
      "op": "AND",
      "path": "4"
    },
    "1774": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1294,
        1300
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1313
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1313
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1809": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1310,
        1311
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1810": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1310,
        1311
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1313
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1812": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1340,
        1341
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 13,
      "value": "0x0"
    },
    "1814": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1342
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1815": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1342
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "op": "SUB"
    },
    "1824": {
      "op": "NOT"
    },
    "1825": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1342
      ],
      "op": "AND",
      "path": "4"
    },
    "1826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1342
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1323,
        1342
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1828": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1204,
        1349
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1829": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1830": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4413,
        4423
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x1"
    },
    "1832": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4413,
        4423
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1833": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1835": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1836": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1843": {
      "op": "SHL"
    },
    "1844": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1845": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4413,
        4423
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1855": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4413,
        4423
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1856": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4413,
        4423
      ],
      "op": "AND",
      "path": "1"
    },
    "1857": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1859": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1860": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "ADD",
      "path": "1"
    },
    "1861": {
      "op": "MSTORE"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1864": {
      "op": "DUP2"
    },
    "1865": {
      "op": "ADD"
    },
    "1866": {
      "op": "DUP4"
    },
    "1867": {
      "op": "SWAP1"
    },
    "1868": {
      "op": "MSTORE"
    },
    "1869": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1870": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4404
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1871": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4404
      ],
      "op": "AND",
      "path": "1"
    },
    "1872": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1873": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4404
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "1878": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4404
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1881": {
      "op": "ADD"
    },
    "1882": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1884": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1886": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1887": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1888": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1889": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "SUB",
      "path": "1"
    },
    "1890": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1891": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1893": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1894": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "GAS",
      "path": "1"
    },
    "1895": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "CALL",
      "path": "1"
    },
    "1896": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1897": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1898": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1899": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x778"
    },
    "1902": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1903": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1904": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1906": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1907": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1908": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1909": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1911": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1912": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1913": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "POP",
      "path": "1"
    },
    "1914": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "POP",
      "path": "1"
    },
    "1915": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "POP",
      "path": "1"
    },
    "1916": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "POP",
      "path": "1"
    },
    "1917": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1919": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1920": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1921": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1923": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "NOT",
      "path": "1"
    },
    "1924": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1926": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1927": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "ADD",
      "path": "1"
    },
    "1928": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "AND",
      "path": "1"
    },
    "1929": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1930": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "ADD",
      "path": "1"
    },
    "1931": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1932": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1934": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1935": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "POP",
      "path": "1"
    },
    "1936": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1937": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "ADD",
      "path": "1"
    },
    "1938": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1939": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79C"
    },
    "1942": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1943": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1944": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9F"
    },
    "1947": {
      "fn": "DexSwap.approveRouter",
      "jump": "i",
      "offset": [
        4383,
        4433
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1948": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1949": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4383,
        4433
      ],
      "op": "POP",
      "path": "1"
    },
    "1950": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "POP",
      "path": "1"
    },
    "1951": {
      "fn": "DexSwap.approveRouter",
      "offset": [
        4310,
        4440
      ],
      "op": "POP",
      "path": "1"
    },
    "1952": {
      "fn": "DexSwap.approveRouter",
      "jump": "o",
      "offset": [
        4310,
        4440
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1953": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1954": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5202,
        5214
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1956": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1957": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1964": {
      "op": "SHL"
    },
    "1965": {
      "op": "SUB"
    },
    "1966": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "AND",
      "path": "4"
    },
    "1967": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1968": {
      "offset": [
        784,
        807
      ],
      "op": "EQ",
      "path": "4"
    },
    "1969": {
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7CC"
    },
    "1972": {
      "offset": [
        776,
        844
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1973": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1975": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1982": {
      "op": "SHL"
    },
    "1983": {
      "offset": [
        776,
        844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1984": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1985": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1987": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "ADD",
      "path": "4"
    },
    "1988": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "1991": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1992": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC91"
    },
    "1995": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        776,
        844
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1996": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1997": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x40"
    },
    "1999": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2000": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2009": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2010": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5284,
        5288
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2011": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2013": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2014": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "ADD",
      "path": "1"
    },
    "2015": {
      "op": "MSTORE"
    },
    "2016": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5294,
        5301
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2017": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5294,
        5301
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2024": {
      "op": "SHL"
    },
    "2025": {
      "op": "SUB"
    },
    "2026": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5275
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2027": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5275
      ],
      "op": "AND",
      "path": "1"
    },
    "2028": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2029": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5275
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "2034": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2037": {
      "op": "ADD"
    },
    "2038": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2040": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2042": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2043": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2044": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2045": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "SUB",
      "path": "1"
    },
    "2046": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2047": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2048": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "GAS",
      "path": "1"
    },
    "2049": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2050": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2051": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2052": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2053": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x812"
    },
    "2056": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2057": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2058": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2060": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2061": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2062": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2063": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2065": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2066": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2067": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "POP",
      "path": "1"
    },
    "2068": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "POP",
      "path": "1"
    },
    "2069": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "POP",
      "path": "1"
    },
    "2070": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "POP",
      "path": "1"
    },
    "2071": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2073": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2074": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2075": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2077": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "NOT",
      "path": "1"
    },
    "2078": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2080": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2081": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "ADD",
      "path": "1"
    },
    "2082": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "AND",
      "path": "1"
    },
    "2083": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2084": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "ADD",
      "path": "1"
    },
    "2085": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2086": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2088": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2089": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "POP",
      "path": "1"
    },
    "2090": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2091": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "ADD",
      "path": "1"
    },
    "2092": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2093": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x836"
    },
    "2096": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2097": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2098": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC6"
    },
    "2101": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "jump": "i",
      "offset": [
        5251,
        5290
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2102": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5290
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2103": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5301
      ],
      "op": "LT",
      "path": "1"
    },
    "2104": {
      "branch": 30,
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5251,
        5301
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2105": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x884"
    },
    "2108": {
      "branch": 30,
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2109": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2111": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2112": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2118": {
      "op": "SHL"
    },
    "2119": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2120": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2123": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2125": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2126": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "ADD",
      "path": "1"
    },
    "2127": {
      "op": "MSTORE"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2132": {
      "op": "DUP3"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "op": "MSTORE"
    },
    "2135": {
      "op": "PUSH32",
      "value": "0x6E6F7420656E6F75676820746F6B656E7320696E20636F6E7472616374000000"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2170": {
      "op": "DUP3"
    },
    "2171": {
      "op": "ADD"
    },
    "2172": {
      "op": "MSTORE"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2175": {
      "op": "ADD"
    },
    "2176": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF"
    },
    "2179": {
      "op": "JUMP"
    },
    "2180": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5230,
        5356
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2181": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5390,
        5403
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x2"
    },
    "2183": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5390,
        5403
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2184": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2186": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2187": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2194": {
      "op": "SHL"
    },
    "2195": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2196": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2203": {
      "op": "SHL"
    },
    "2204": {
      "op": "SUB"
    },
    "2205": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5390,
        5403
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2206": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5390,
        5403
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2207": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5390,
        5403
      ],
      "op": "AND",
      "path": "1"
    },
    "2208": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2210": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2211": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "ADD",
      "path": "1"
    },
    "2212": {
      "op": "MSTORE"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2215": {
      "op": "DUP2"
    },
    "2216": {
      "op": "ADD"
    },
    "2217": {
      "op": "DUP5"
    },
    "2218": {
      "op": "SWAP1"
    },
    "2219": {
      "op": "MSTORE"
    },
    "2220": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5389
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2221": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5389
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2222": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5389
      ],
      "op": "AND",
      "path": "1"
    },
    "2223": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5389
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2224": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5389
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "2229": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5389
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2232": {
      "op": "ADD"
    },
    "2233": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2235": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2237": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2238": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2239": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2240": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "SUB",
      "path": "1"
    },
    "2241": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2242": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2244": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2245": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "GAS",
      "path": "1"
    },
    "2246": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "CALL",
      "path": "1"
    },
    "2247": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2248": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2249": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2250": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D7"
    },
    "2253": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2254": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2255": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2257": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2258": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2259": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2260": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2262": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2263": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2264": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "POP",
      "path": "1"
    },
    "2265": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "POP",
      "path": "1"
    },
    "2266": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "POP",
      "path": "1"
    },
    "2267": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "POP",
      "path": "1"
    },
    "2268": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2270": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2271": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2272": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2274": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "NOT",
      "path": "1"
    },
    "2275": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2277": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2278": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "ADD",
      "path": "1"
    },
    "2279": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "AND",
      "path": "1"
    },
    "2280": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2281": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "ADD",
      "path": "1"
    },
    "2282": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2283": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2285": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2286": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "POP",
      "path": "1"
    },
    "2287": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2288": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "ADD",
      "path": "1"
    },
    "2289": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2290": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FB"
    },
    "2293": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2294": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2295": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9F"
    },
    "2298": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "jump": "i",
      "offset": [
        5366,
        5413
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2299": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2300": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5366,
        5413
      ],
      "op": "POP",
      "path": "1"
    },
    "2301": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5430,
        5434
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x1"
    },
    "2303": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5423,
        5434
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2304": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5423,
        5434
      ],
      "op": "POP",
      "path": "1"
    },
    "2305": {
      "offset": [
        854,
        855
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2306": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2307": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2308": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "POP",
      "path": "1"
    },
    "2309": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "offset": [
        5086,
        5441
      ],
      "op": "POP",
      "path": "1"
    },
    "2310": {
      "fn": "DexSwap.emmergencyWithdrawTkn",
      "jump": "o",
      "offset": [
        5086,
        5441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2311": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2312": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5589,
        5601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2314": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2315": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2322": {
      "op": "SHL"
    },
    "2323": {
      "op": "SUB"
    },
    "2324": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "AND",
      "path": "4"
    },
    "2325": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2326": {
      "offset": [
        784,
        807
      ],
      "op": "EQ",
      "path": "4"
    },
    "2327": {
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x932"
    },
    "2330": {
      "offset": [
        776,
        844
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2331": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2333": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2340": {
      "op": "SHL"
    },
    "2341": {
      "offset": [
        776,
        844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2342": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2343": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2345": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "ADD",
      "path": "4"
    },
    "2346": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "2349": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2350": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC91"
    },
    "2353": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        776,
        844
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2354": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2355": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5645,
        5646
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x0"
    },
    "2357": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5621,
        5642
      ],
      "op": "SELFBALANCE",
      "path": "1"
    },
    "2358": {
      "branch": 31,
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5621,
        5646
      ],
      "op": "GT",
      "path": "1"
    },
    "2359": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x98C"
    },
    "2362": {
      "branch": 31,
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2363": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2365": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2372": {
      "op": "SHL"
    },
    "2373": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2374": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2377": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2379": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2380": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "ADD",
      "path": "1"
    },
    "2381": {
      "op": "MSTORE"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2386": {
      "op": "DUP3"
    },
    "2387": {
      "op": "ADD"
    },
    "2388": {
      "op": "MSTORE"
    },
    "2389": {
      "op": "PUSH32",
      "value": "0x636F6E74726163742068617320616E20656D70747920424E422062616C616E63"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2424": {
      "op": "DUP3"
    },
    "2425": {
      "op": "ADD"
    },
    "2426": {
      "op": "MSTORE"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2431": {
      "op": "SHL"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2434": {
      "op": "DUP3"
    },
    "2435": {
      "op": "ADD"
    },
    "2436": {
      "op": "MSTORE"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2439": {
      "op": "ADD"
    },
    "2440": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF"
    },
    "2443": {
      "op": "JUMP"
    },
    "2444": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5613,
        5684
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2445": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5707
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x2"
    },
    "2447": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5707
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2448": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2450": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2457": {
      "op": "SHL"
    },
    "2458": {
      "op": "SUB"
    },
    "2459": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5707
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2460": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5707
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2461": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5707
      ],
      "op": "AND",
      "path": "1"
    },
    "2462": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5707
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2463": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5717,
        5738
      ],
      "op": "SELFBALANCE",
      "path": "1"
    },
    "2464": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2465": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2466": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "2469": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "MUL",
      "path": "1"
    },
    "2470": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2471": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5707
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2473": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2474": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5707
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2475": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2476": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5717,
        5738
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2477": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5707
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2478": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2479": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "CALL",
      "path": "1"
    },
    "2480": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2481": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "POP",
      "path": "1"
    },
    "2482": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "POP",
      "path": "1"
    },
    "2483": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "POP",
      "path": "1"
    },
    "2484": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "POP",
      "path": "1"
    },
    "2485": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2486": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2487": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2488": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C5"
    },
    "2491": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2492": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2493": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2495": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2496": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2497": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2498": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2500": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2501": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2502": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5694,
        5739
      ],
      "op": "POP",
      "path": "1"
    },
    "2503": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5756,
        5760
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x1"
    },
    "2505": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5749,
        5760
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2506": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5749,
        5760
      ],
      "op": "POP",
      "path": "1"
    },
    "2507": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "offset": [
        5528,
        5767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2508": {
      "fn": "DexSwap.emmergencyWithdrawBnb",
      "jump": "o",
      "offset": [
        5528,
        5767
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2509": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4446,
        4562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2510": {
      "fn": "Ownable.owner",
      "offset": [
        618,
        625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2512": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "op": "SUB"
    },
    "2521": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "AND",
      "path": "4"
    },
    "2522": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2523": {
      "offset": [
        784,
        807
      ],
      "op": "EQ",
      "path": "4"
    },
    "2524": {
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9F7"
    },
    "2527": {
      "offset": [
        776,
        844
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2528": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2530": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2537": {
      "op": "SHL"
    },
    "2538": {
      "offset": [
        776,
        844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2539": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2540": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2542": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "ADD",
      "path": "4"
    },
    "2543": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "2546": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2547": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC91"
    },
    "2550": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        776,
        844
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2551": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2558": {
      "op": "SHL"
    },
    "2559": {
      "op": "SUB"
    },
    "2560": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "AND",
      "path": "1",
      "statement": 21
    },
    "2561": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2563": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2564": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2565": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2566": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4539
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2568": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2570": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2571": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2573": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2574": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4548
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2575": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4555
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2576": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4555
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2579": {
      "op": "NOT"
    },
    "2580": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4555
      ],
      "op": "AND",
      "path": "1"
    },
    "2581": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4551,
        4555
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2583": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4555
      ],
      "op": "OR",
      "path": "1"
    },
    "2584": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4555
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2585": {
      "fn": "DexSwap.authenticateSeller",
      "offset": [
        4520,
        4555
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2586": {
      "fn": "DexSwap.authenticateSeller",
      "jump": "o",
      "offset": [
        4446,
        4562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2587": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3405,
        4304
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2588": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3544,
        3554
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 22
    },
    "2589": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2591": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2592": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2593": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2594": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2596": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2598": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2599": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2601": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2602": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2603": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2604": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2606": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "AND",
      "path": "1"
    },
    "2607": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3563
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2608": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3563
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2609": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3555
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2611": {
      "branch": 32,
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3524,
        3563
      ],
      "op": "EQ",
      "path": "1"
    },
    "2612": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x382"
    },
    "2615": {
      "branch": 32,
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2616": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2618": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2625": {
      "op": "SHL"
    },
    "2626": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2627": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2630": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2632": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2633": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "ADD",
      "path": "1"
    },
    "2634": {
      "op": "MSTORE"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2639": {
      "op": "DUP3"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "op": "MSTORE"
    },
    "2642": {
      "op": "PUSH32",
      "value": "0x737761704578616374546F6B656E73466F724554483A206D7573742062652063"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2677": {
      "op": "DUP3"
    },
    "2678": {
      "op": "ADD"
    },
    "2679": {
      "op": "MSTORE"
    },
    "2680": {
      "op": "PUSH32",
      "value": "0x616C6C65642062792061757468656E746963617465642073656C6C6572000000"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2715": {
      "op": "DUP3"
    },
    "2716": {
      "op": "ADD"
    },
    "2717": {
      "op": "MSTORE"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "fn": "DexSwap.swapExactTokensForETH",
      "offset": [
        3503,
        3650
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF"
    },
    "2724": {
      "op": "JUMP"
    },
    "2725": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4725,
        4958
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2726": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4830,
        4842
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2728": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2729": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "op": "SUB"
    },
    "2738": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "AND",
      "path": "4"
    },
    "2739": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2740": {
      "offset": [
        784,
        807
      ],
      "op": "EQ",
      "path": "4"
    },
    "2741": {
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD0"
    },
    "2744": {
      "offset": [
        776,
        844
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2745": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2747": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "offset": [
        776,
        844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2756": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2757": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2759": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "ADD",
      "path": "4"
    },
    "2760": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "2763": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2764": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC91"
    },
    "2767": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        776,
        844
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2768": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4871
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x2"
    },
    "2772": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2773": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "op": "NOT"
    },
    "2783": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "AND",
      "path": "1"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2790": {
      "op": "SHL"
    },
    "2791": {
      "op": "SUB"
    },
    "2792": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2793": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2794": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2795": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "AND",
      "path": "1"
    },
    "2796": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2797": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2798": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "OR",
      "path": "1"
    },
    "2799": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2800": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4858,
        4883
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2803": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4923
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 24
    },
    "2804": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4923
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2805": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4923
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2806": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2808": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2810": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4923
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2811": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4923
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2813": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4923
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2814": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4923
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2815": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4930
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2816": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4930
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2819": {
      "op": "NOT"
    },
    "2820": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4930
      ],
      "op": "AND",
      "path": "1"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4930
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2824": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4930
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2825": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4930
      ],
      "op": "OR",
      "path": "1"
    },
    "2826": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4930
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2827": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4930
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2828": {
      "fn": "DexSwap.setAdministrator",
      "offset": [
        4893,
        4930
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2829": {
      "op": "SWAP1"
    },
    "2830": {
      "fn": "DexSwap.setAdministrator",
      "jump": "o",
      "offset": [
        4725,
        4958
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2831": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1498,
        1738
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2832": {
      "fn": "Ownable.owner",
      "offset": [
        618,
        625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2834": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2841": {
      "op": "SHL"
    },
    "2842": {
      "op": "SUB"
    },
    "2843": {
      "fn": "Ownable.owner",
      "offset": [
        644,
        650
      ],
      "op": "AND",
      "path": "4"
    },
    "2844": {
      "fn": "Context._msgSender",
      "offset": [
        691,
        701
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2845": {
      "offset": [
        784,
        807
      ],
      "op": "EQ",
      "path": "4"
    },
    "2846": {
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB39"
    },
    "2849": {
      "offset": [
        776,
        844
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2850": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2852": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2859": {
      "op": "SHL"
    },
    "2860": {
      "offset": [
        776,
        844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2861": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2862": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2864": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "ADD",
      "path": "4"
    },
    "2865": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "2868": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2869": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC91"
    },
    "2872": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        776,
        844
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2873": {
      "fn": "Context._msgSender",
      "offset": [
        776,
        844
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2880": {
      "op": "SHL"
    },
    "2881": {
      "op": "SUB"
    },
    "2882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1586,
        1608
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 25
    },
    "2883": {
      "branch": 33,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1586,
        1608
      ],
      "op": "AND",
      "path": "4"
    },
    "2884": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB9E"
    },
    "2887": {
      "branch": 33,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2897": {
      "op": "SHL"
    },
    "2898": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2899": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "ADD",
      "path": "4"
    },
    "2906": {
      "op": "MSTORE"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2911": {
      "op": "DUP3"
    },
    "2912": {
      "op": "ADD"
    },
    "2913": {
      "op": "MSTORE"
    },
    "2914": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2949": {
      "op": "DUP3"
    },
    "2950": {
      "op": "ADD"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2961": {
      "op": "SHL"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2964": {
      "op": "DUP3"
    },
    "2965": {
      "op": "ADD"
    },
    "2966": {
      "op": "MSTORE"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2969": {
      "op": "ADD"
    },
    "2970": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DF"
    },
    "2973": {
      "op": "JUMP"
    },
    "2974": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1578,
        1651
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1687,
        1693
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 26,
      "value": "0x0"
    },
    "2977": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1687,
        1693
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2978": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1687,
        1693
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2979": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1666,
        1704
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2981": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1666,
        1704
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "op": "SUB"
    },
    "2990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1666,
        1704
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1666,
        1704
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1666,
        1704
      ],
      "op": "AND",
      "path": "4"
    },
    "2993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1666,
        1704
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2994": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1687,
        1693
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1687,
        1693
      ],
      "op": "AND",
      "path": "4"
    },
    "2996": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1687,
        1693
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2997": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1666,
        1704
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1666,
        1704
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3031": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1666,
        1704
      ],
      "op": "LOG3",
      "path": "4"
    },
    "3032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1720
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 27,
      "value": "0x0"
    },
    "3034": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "op": "SUB"
    },
    "3044": {
      "op": "NOT"
    },
    "3045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "AND",
      "path": "4"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3052": {
      "op": "SHL"
    },
    "3053": {
      "op": "SUB"
    },
    "3054": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3055": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3056": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3057": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "AND",
      "path": "4"
    },
    "3058": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3060": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3061": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "OR",
      "path": "4"
    },
    "3062": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3063": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1714,
        1731
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3064": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1498,
        1738
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3065": {
      "op": "JUMPDEST"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3072": {
      "op": "SHL"
    },
    "3073": {
      "op": "SUB"
    },
    "3074": {
      "op": "DUP2"
    },
    "3075": {
      "op": "AND"
    },
    "3076": {
      "op": "DUP2"
    },
    "3077": {
      "op": "EQ"
    },
    "3078": {
      "op": "PUSH2",
      "value": "0xC0E"
    },
    "3081": {
      "op": "JUMPI"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3084": {
      "op": "DUP1"
    },
    "3085": {
      "op": "REVERT"
    },
    "3086": {
      "op": "JUMPDEST"
    },
    "3087": {
      "op": "POP"
    },
    "3088": {
      "jump": "o",
      "op": "JUMP"
    },
    "3089": {
      "op": "JUMPDEST"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3092": {
      "op": "DUP1"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3095": {
      "op": "DUP4"
    },
    "3096": {
      "op": "DUP6"
    },
    "3097": {
      "op": "SUB"
    },
    "3098": {
      "op": "SLT"
    },
    "3099": {
      "op": "ISZERO"
    },
    "3100": {
      "op": "PUSH2",
      "value": "0xC24"
    },
    "3103": {
      "op": "JUMPI"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3106": {
      "op": "DUP1"
    },
    "3107": {
      "op": "REVERT"
    },
    "3108": {
      "op": "JUMPDEST"
    },
    "3109": {
      "op": "DUP3"
    },
    "3110": {
      "op": "CALLDATALOAD"
    },
    "3111": {
      "op": "SWAP2"
    },
    "3112": {
      "op": "POP"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3115": {
      "op": "DUP4"
    },
    "3116": {
      "op": "ADD"
    },
    "3117": {
      "op": "CALLDATALOAD"
    },
    "3118": {
      "op": "PUSH2",
      "value": "0xC36"
    },
    "3121": {
      "op": "DUP2"
    },
    "3122": {
      "op": "PUSH2",
      "value": "0xBF9"
    },
    "3125": {
      "jump": "i",
      "op": "JUMP"
    },
    "3126": {
      "op": "JUMPDEST"
    },
    "3127": {
      "op": "DUP1"
    },
    "3128": {
      "op": "SWAP2"
    },
    "3129": {
      "op": "POP"
    },
    "3130": {
      "op": "POP"
    },
    "3131": {
      "op": "SWAP3"
    },
    "3132": {
      "op": "POP"
    },
    "3133": {
      "op": "SWAP3"
    },
    "3134": {
      "op": "SWAP1"
    },
    "3135": {
      "op": "POP"
    },
    "3136": {
      "jump": "o",
      "op": "JUMP"
    },
    "3137": {
      "op": "JUMPDEST"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3140": {
      "op": "DUP1"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3143": {
      "op": "DUP4"
    },
    "3144": {
      "op": "DUP6"
    },
    "3145": {
      "op": "SUB"
    },
    "3146": {
      "op": "SLT"
    },
    "3147": {
      "op": "ISZERO"
    },
    "3148": {
      "op": "PUSH2",
      "value": "0xC54"
    },
    "3151": {
      "op": "JUMPI"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3154": {
      "op": "DUP1"
    },
    "3155": {
      "op": "REVERT"
    },
    "3156": {
      "op": "JUMPDEST"
    },
    "3157": {
      "op": "DUP3"
    },
    "3158": {
      "op": "CALLDATALOAD"
    },
    "3159": {
      "op": "PUSH2",
      "value": "0xC5F"
    },
    "3162": {
      "op": "DUP2"
    },
    "3163": {
      "op": "PUSH2",
      "value": "0xBF9"
    },
    "3166": {
      "jump": "i",
      "op": "JUMP"
    },
    "3167": {
      "op": "JUMPDEST"
    },
    "3168": {
      "op": "SWAP5"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3171": {
      "op": "SWAP4"
    },
    "3172": {
      "op": "SWAP1"
    },
    "3173": {
      "op": "SWAP4"
    },
    "3174": {
      "op": "ADD"
    },
    "3175": {
      "op": "CALLDATALOAD"
    },
    "3176": {
      "op": "SWAP4"
    },
    "3177": {
      "op": "POP"
    },
    "3178": {
      "op": "POP"
    },
    "3179": {
      "op": "POP"
    },
    "3180": {
      "jump": "o",
      "op": "JUMP"
    },
    "3181": {
      "op": "JUMPDEST"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3186": {
      "op": "DUP3"
    },
    "3187": {
      "op": "DUP5"
    },
    "3188": {
      "op": "SUB"
    },
    "3189": {
      "op": "SLT"
    },
    "3190": {
      "op": "ISZERO"
    },
    "3191": {
      "op": "PUSH2",
      "value": "0xC7F"
    },
    "3194": {
      "op": "JUMPI"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3197": {
      "op": "DUP1"
    },
    "3198": {
      "op": "REVERT"
    },
    "3199": {
      "op": "JUMPDEST"
    },
    "3200": {
      "op": "DUP2"
    },
    "3201": {
      "op": "CALLDATALOAD"
    },
    "3202": {
      "op": "PUSH2",
      "value": "0xC8A"
    },
    "3205": {
      "op": "DUP2"
    },
    "3206": {
      "op": "PUSH2",
      "value": "0xBF9"
    },
    "3209": {
      "jump": "i",
      "op": "JUMP"
    },
    "3210": {
      "op": "JUMPDEST"
    },
    "3211": {
      "op": "SWAP4"
    },
    "3212": {
      "op": "SWAP3"
    },
    "3213": {
      "op": "POP"
    },
    "3214": {
      "op": "POP"
    },
    "3215": {
      "op": "POP"
    },
    "3216": {
      "jump": "o",
      "op": "JUMP"
    },
    "3217": {
      "op": "JUMPDEST"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3220": {
      "op": "DUP1"
    },
    "3221": {
      "op": "DUP3"
    },
    "3222": {
      "op": "MSTORE"
    },
    "3223": {
      "op": "DUP2"
    },
    "3224": {
      "op": "DUP2"
    },
    "3225": {
      "op": "ADD"
    },
    "3226": {
      "op": "MSTORE"
    },
    "3227": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3262": {
      "op": "DUP3"
    },
    "3263": {
      "op": "ADD"
    },
    "3264": {
      "op": "MSTORE"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3267": {
      "op": "ADD"
    },
    "3268": {
      "op": "SWAP1"
    },
    "3269": {
      "jump": "o",
      "op": "JUMP"
    },
    "3270": {
      "op": "JUMPDEST"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3275": {
      "op": "DUP3"
    },
    "3276": {
      "op": "DUP5"
    },
    "3277": {
      "op": "SUB"
    },
    "3278": {
      "op": "SLT"
    },
    "3279": {
      "op": "ISZERO"
    },
    "3280": {
      "op": "PUSH2",
      "value": "0xCD8"
    },
    "3283": {
      "op": "JUMPI"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3286": {
      "op": "DUP1"
    },
    "3287": {
      "op": "REVERT"
    },
    "3288": {
      "op": "JUMPDEST"
    },
    "3289": {
      "op": "POP"
    },
    "3290": {
      "op": "MLOAD"
    },
    "3291": {
      "op": "SWAP2"
    },
    "3292": {
      "op": "SWAP1"
    },
    "3293": {
      "op": "POP"
    },
    "3294": {
      "jump": "o",
      "op": "JUMP"
    },
    "3295": {
      "op": "JUMPDEST"
    },
    "3296": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3303": {
      "op": "SHL"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3306": {
      "op": "MSTORE"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3311": {
      "op": "MSTORE"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3316": {
      "op": "REVERT"
    },
    "3317": {
      "op": "JUMPDEST"
    },
    "3318": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3325": {
      "op": "SHL"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3328": {
      "op": "MSTORE"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3333": {
      "op": "MSTORE"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3338": {
      "op": "REVERT"
    },
    "3339": {
      "op": "JUMPDEST"
    },
    "3340": {
      "op": "DUP1"
    },
    "3341": {
      "op": "DUP3"
    },
    "3342": {
      "op": "ADD"
    },
    "3343": {
      "op": "DUP1"
    },
    "3344": {
      "op": "DUP3"
    },
    "3345": {
      "op": "GT"
    },
    "3346": {
      "op": "ISZERO"
    },
    "3347": {
      "op": "PUSH2",
      "value": "0x901"
    },
    "3350": {
      "op": "JUMPI"
    },
    "3351": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3358": {
      "op": "SHL"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3361": {
      "op": "MSTORE"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3366": {
      "op": "MSTORE"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3371": {
      "op": "REVERT"
    },
    "3372": {
      "op": "JUMPDEST"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3375": {
      "op": "DUP2"
    },
    "3376": {
      "op": "MLOAD"
    },
    "3377": {
      "op": "DUP1"
    },
    "3378": {
      "op": "DUP5"
    },
    "3379": {
      "op": "MSTORE"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3382": {
      "op": "DUP1"
    },
    "3383": {
      "op": "DUP6"
    },
    "3384": {
      "op": "ADD"
    },
    "3385": {
      "op": "SWAP5"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "DUP1"
    },
    "3388": {
      "op": "DUP5"
    },
    "3389": {
      "op": "ADD"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3392": {
      "op": "JUMPDEST"
    },
    "3393": {
      "op": "DUP4"
    },
    "3394": {
      "op": "DUP2"
    },
    "3395": {
      "op": "LT"
    },
    "3396": {
      "op": "ISZERO"
    },
    "3397": {
      "op": "PUSH2",
      "value": "0xD65"
    },
    "3400": {
      "op": "JUMPI"
    },
    "3401": {
      "op": "DUP2"
    },
    "3402": {
      "op": "MLOAD"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3409": {
      "op": "SHL"
    },
    "3410": {
      "op": "SUB"
    },
    "3411": {
      "op": "AND"
    },
    "3412": {
      "op": "DUP8"
    },
    "3413": {
      "op": "MSTORE"
    },
    "3414": {
      "op": "SWAP6"
    },
    "3415": {
      "op": "DUP3"
    },
    "3416": {
      "op": "ADD"
    },
    "3417": {
      "op": "SWAP6"
    },
    "3418": {
      "op": "SWAP1"
    },
    "3419": {
      "op": "DUP3"
    },
    "3420": {
      "op": "ADD"
    },
    "3421": {
      "op": "SWAP1"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "PUSH2",
      "value": "0xD40"
    },
    "3428": {
      "op": "JUMP"
    },
    "3429": {
      "op": "JUMPDEST"
    },
    "3430": {
      "op": "POP"
    },
    "3431": {
      "op": "SWAP5"
    },
    "3432": {
      "op": "SWAP6"
    },
    "3433": {
      "op": "SWAP5"
    },
    "3434": {
      "op": "POP"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "jump": "o",
      "op": "JUMP"
    },
    "3440": {
      "op": "JUMPDEST"
    },
    "3441": {
      "op": "DUP5"
    },
    "3442": {
      "op": "DUP2"
    },
    "3443": {
      "op": "MSTORE"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3448": {
      "op": "DUP3"
    },
    "3449": {
      "op": "ADD"
    },
    "3450": {
      "op": "MSTORE"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3453": {
      "op": "PUSH2",
      "value": "0xD89"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3458": {
      "op": "DUP4"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "DUP7"
    },
    "3461": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3464": {
      "jump": "i",
      "op": "JUMP"
    },
    "3465": {
      "op": "JUMPDEST"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "op": "SUB"
    },
    "3474": {
      "op": "SWAP5"
    },
    "3475": {
      "op": "SWAP1"
    },
    "3476": {
      "op": "SWAP5"
    },
    "3477": {
      "op": "AND"
    },
    "3478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3480": {
      "op": "DUP4"
    },
    "3481": {
      "op": "ADD"
    },
    "3482": {
      "op": "MSTORE"
    },
    "3483": {
      "op": "POP"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3486": {
      "op": "ADD"
    },
    "3487": {
      "op": "MSTORE"
    },
    "3488": {
      "op": "SWAP3"
    },
    "3489": {
      "op": "SWAP2"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "jump": "o",
      "op": "JUMP"
    },
    "3493": {
      "op": "JUMPDEST"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3498": {
      "op": "DUP1"
    },
    "3499": {
      "op": "DUP4"
    },
    "3500": {
      "op": "DUP6"
    },
    "3501": {
      "op": "SUB"
    },
    "3502": {
      "op": "SLT"
    },
    "3503": {
      "op": "ISZERO"
    },
    "3504": {
      "op": "PUSH2",
      "value": "0xDB8"
    },
    "3507": {
      "op": "JUMPI"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3510": {
      "op": "DUP1"
    },
    "3511": {
      "op": "REVERT"
    },
    "3512": {
      "op": "JUMPDEST"
    },
    "3513": {
      "op": "DUP3"
    },
    "3514": {
      "op": "MLOAD"
    },
    "3515": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3524": {
      "op": "DUP1"
    },
    "3525": {
      "op": "DUP3"
    },
    "3526": {
      "op": "GT"
    },
    "3527": {
      "op": "ISZERO"
    },
    "3528": {
      "op": "PUSH2",
      "value": "0xDD0"
    },
    "3531": {
      "op": "JUMPI"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3534": {
      "op": "DUP1"
    },
    "3535": {
      "op": "REVERT"
    },
    "3536": {
      "op": "JUMPDEST"
    },
    "3537": {
      "op": "DUP2"
    },
    "3538": {
      "op": "DUP6"
    },
    "3539": {
      "op": "ADD"
    },
    "3540": {
      "op": "SWAP2"
    },
    "3541": {
      "op": "POP"
    },
    "3542": {
      "op": "DUP6"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3545": {
      "op": "DUP4"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "op": "SLT"
    },
    "3548": {
      "op": "PUSH2",
      "value": "0xDE4"
    },
    "3551": {
      "op": "JUMPI"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3554": {
      "op": "DUP1"
    },
    "3555": {
      "op": "REVERT"
    },
    "3556": {
      "op": "JUMPDEST"
    },
    "3557": {
      "op": "DUP2"
    },
    "3558": {
      "op": "MLOAD"
    },
    "3559": {
      "op": "DUP2"
    },
    "3560": {
      "op": "DUP2"
    },
    "3561": {
      "op": "GT"
    },
    "3562": {
      "op": "ISZERO"
    },
    "3563": {
      "op": "PUSH2",
      "value": "0xDF6"
    },
    "3566": {
      "op": "JUMPI"
    },
    "3567": {
      "op": "PUSH2",
      "value": "0xDF6"
    },
    "3570": {
      "op": "PUSH2",
      "value": "0xCDF"
    },
    "3573": {
      "jump": "i",
      "op": "JUMP"
    },
    "3574": {
      "op": "JUMPDEST"
    },
    "3575": {
      "op": "DUP1"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3578": {
      "op": "SHL"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3581": {
      "op": "MLOAD"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3584": {
      "op": "NOT"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3587": {
      "op": "DUP4"
    },
    "3588": {
      "op": "ADD"
    },
    "3589": {
      "op": "AND"
    },
    "3590": {
      "op": "DUP2"
    },
    "3591": {
      "op": "ADD"
    },
    "3592": {
      "op": "DUP2"
    },
    "3593": {
      "op": "DUP2"
    },
    "3594": {
      "op": "LT"
    },
    "3595": {
      "op": "DUP6"
    },
    "3596": {
      "op": "DUP3"
    },
    "3597": {
      "op": "GT"
    },
    "3598": {
      "op": "OR"
    },
    "3599": {
      "op": "ISZERO"
    },
    "3600": {
      "op": "PUSH2",
      "value": "0xE1B"
    },
    "3603": {
      "op": "JUMPI"
    },
    "3604": {
      "op": "PUSH2",
      "value": "0xE1B"
    },
    "3607": {
      "op": "PUSH2",
      "value": "0xCDF"
    },
    "3610": {
      "jump": "i",
      "op": "JUMP"
    },
    "3611": {
      "op": "JUMPDEST"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3614": {
      "op": "MSTORE"
    },
    "3615": {
      "op": "SWAP2"
    },
    "3616": {
      "op": "DUP3"
    },
    "3617": {
      "op": "MSTORE"
    },
    "3618": {
      "op": "DUP5"
    },
    "3619": {
      "op": "DUP3"
    },
    "3620": {
      "op": "ADD"
    },
    "3621": {
      "op": "SWAP3"
    },
    "3622": {
      "op": "POP"
    },
    "3623": {
      "op": "DUP4"
    },
    "3624": {
      "op": "DUP2"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "DUP6"
    },
    "3627": {
      "op": "ADD"
    },
    "3628": {
      "op": "SWAP2"
    },
    "3629": {
      "op": "DUP9"
    },
    "3630": {
      "op": "DUP4"
    },
    "3631": {
      "op": "GT"
    },
    "3632": {
      "op": "ISZERO"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xE39"
    },
    "3636": {
      "op": "JUMPI"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3639": {
      "op": "DUP1"
    },
    "3640": {
      "op": "REVERT"
    },
    "3641": {
      "op": "JUMPDEST"
    },
    "3642": {
      "op": "SWAP4"
    },
    "3643": {
      "op": "DUP6"
    },
    "3644": {
      "op": "ADD"
    },
    "3645": {
      "op": "SWAP4"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "op": "DUP3"
    },
    "3648": {
      "op": "DUP6"
    },
    "3649": {
      "op": "LT"
    },
    "3650": {
      "op": "ISZERO"
    },
    "3651": {
      "op": "PUSH2",
      "value": "0xE57"
    },
    "3654": {
      "op": "JUMPI"
    },
    "3655": {
      "op": "DUP5"
    },
    "3656": {
      "op": "MLOAD"
    },
    "3657": {
      "op": "DUP5"
    },
    "3658": {
      "op": "MSTORE"
    },
    "3659": {
      "op": "SWAP4"
    },
    "3660": {
      "op": "DUP6"
    },
    "3661": {
      "op": "ADD"
    },
    "3662": {
      "op": "SWAP4"
    },
    "3663": {
      "op": "SWAP3"
    },
    "3664": {
      "op": "DUP6"
    },
    "3665": {
      "op": "ADD"
    },
    "3666": {
      "op": "SWAP3"
    },
    "3667": {
      "op": "PUSH2",
      "value": "0xE3E"
    },
    "3670": {
      "op": "JUMP"
    },
    "3671": {
      "op": "JUMPDEST"
    },
    "3672": {
      "op": "SWAP9"
    },
    "3673": {
      "op": "SWAP8"
    },
    "3674": {
      "op": "POP"
    },
    "3675": {
      "op": "POP"
    },
    "3676": {
      "op": "POP"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "op": "POP"
    },
    "3679": {
      "op": "POP"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "op": "POP"
    },
    "3682": {
      "jump": "o",
      "op": "JUMP"
    },
    "3683": {
      "op": "JUMPDEST"
    },
    "3684": {
      "op": "DUP6"
    },
    "3685": {
      "op": "DUP2"
    },
    "3686": {
      "op": "MSTORE"
    },
    "3687": {
      "op": "DUP5"
    },
    "3688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3690": {
      "op": "DUP3"
    },
    "3691": {
      "op": "ADD"
    },
    "3692": {
      "op": "MSTORE"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3697": {
      "op": "DUP3"
    },
    "3698": {
      "op": "ADD"
    },
    "3699": {
      "op": "MSTORE"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3702": {
      "op": "PUSH2",
      "value": "0xE82"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3707": {
      "op": "DUP4"
    },
    "3708": {
      "op": "ADD"
    },
    "3709": {
      "op": "DUP7"
    },
    "3710": {
      "op": "PUSH2",
      "value": "0xD2C"
    },
    "3713": {
      "jump": "i",
      "op": "JUMP"
    },
    "3714": {
      "op": "JUMPDEST"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3721": {
      "op": "SHL"
    },
    "3722": {
      "op": "SUB"
    },
    "3723": {
      "op": "SWAP5"
    },
    "3724": {
      "op": "SWAP1"
    },
    "3725": {
      "op": "SWAP5"
    },
    "3726": {
      "op": "AND"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3729": {
      "op": "DUP4"
    },
    "3730": {
      "op": "ADD"
    },
    "3731": {
      "op": "MSTORE"
    },
    "3732": {
      "op": "POP"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "MSTORE"
    },
    "3737": {
      "op": "SWAP4"
    },
    "3738": {
      "op": "SWAP3"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "jump": "o",
      "op": "JUMP"
    },
    "3743": {
      "op": "JUMPDEST"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3748": {
      "op": "DUP3"
    },
    "3749": {
      "op": "DUP5"
    },
    "3750": {
      "op": "SUB"
    },
    "3751": {
      "op": "SLT"
    },
    "3752": {
      "op": "ISZERO"
    },
    "3753": {
      "op": "PUSH2",
      "value": "0xEB1"
    },
    "3756": {
      "op": "JUMPI"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3759": {
      "op": "DUP1"
    },
    "3760": {
      "op": "REVERT"
    },
    "3761": {
      "op": "JUMPDEST"
    },
    "3762": {
      "op": "DUP2"
    },
    "3763": {
      "op": "MLOAD"
    },
    "3764": {
      "op": "DUP1"
    },
    "3765": {
      "op": "ISZERO"
    },
    "3766": {
      "op": "ISZERO"
    },
    "3767": {
      "op": "DUP2"
    },
    "3768": {
      "op": "EQ"
    },
    "3769": {
      "op": "PUSH2",
      "value": "0xC8A"
    },
    "3772": {
      "op": "JUMPI"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3775": {
      "op": "DUP1"
    },
    "3776": {
      "op": "REVERT"
    }
  },
  "sha1": "07c361645d5d37a27066c192cd3e3e0d212a554f",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"./Ownable.sol\";\n\ninterface IWBNB {\n    function withdraw(uint256) external;\n\n    function deposit() external payable;\n}\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\ninterface PancakeSwapRouter {\n    function swapExactETHForTokens(\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n\n    function swapTokensForExactETH(\n        uint256 amountOut,\n        uint256 amountInMax,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapExactTokensForETH(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external returns (uint256[] memory amounts);\n\n    function swapETHForExactTokens(\n        uint256 amountOut,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256[] memory amounts);\n}\n\ncontract DexSwap is Ownable {\n    // bsc variables\n    address constant wbnb = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\n    address constant cakeFactory = 0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73;\n    PancakeSwapRouter cakeRouter;\n\n    address payable private administrator;\n    mapping(address => bool) public authenticatedSeller;\n\n    constructor() {\n        administrator = payable(msg.sender);\n        authenticatedSeller[msg.sender] = true;\n\n        cakeRouter = PancakeSwapRouter(\n            0x10ED43C718714eb63d5aA57B78B54704E256024E\n        );\n    }\n\n    receive() external payable {\n        IWBNB(wbnb).deposit{value: msg.value}();\n    }\n\n    function swapExactETHForTokens(uint256 amountIn, address tokenOut)\n        external\n    {\n        require(\n            authenticatedSeller[msg.sender] == true,\n            \"swapExactETHForTokens: must be called by authenticated seller\"\n        );\n\n        require(\n            IERC20(wbnb).balanceOf(address(this)) > amountIn,\n            \"DexSwap: Insuffient Balance\"\n        );\n        address[] memory path = new address[](2);\n        path[0] = wbnb;\n        path[1] = tokenOut;\n\n        cakeRouter.swapETHForExactTokens(\n            amountIn,\n            path,\n            address(this),\n            block.timestamp + 125\n        );\n\n        path[0] = tokenOut;\n        path[1] = wbnb;\n\n        cakeRouter.swapExactTokensForETH(\n            IERC20(tokenOut).balanceOf(address(this)),\n            0,\n            path,\n            address(this),\n            block.timestamp + 125\n        );\n    }\n\n    function swapExactTokensForETH(uint256 amountIn, address tokenOut)\n        external\n    {\n        require(\n            authenticatedSeller[msg.sender] == true,\n            \"swapExactTokensForETH: must be called by authenticated seller\"\n        );\n\n        require(\n            IERC20(wbnb).balanceOf(address(this)) > amountIn,\n            \"DexSwap: Insuffient Balance\"\n        );\n\n        address[] memory path = new address[](2);\n        path[0] = wbnb;\n        path[1] = tokenOut;\n\n        cakeRouter.swapETHForExactTokens(\n            amountIn,\n            path,\n            address(this),\n            block.timestamp + 125\n        );\n\n        path[0] = tokenOut;\n        path[1] = wbnb;\n\n        cakeRouter.swapExactTokensForETH(\n            IERC20(tokenOut).balanceOf(address(this)),\n            0,\n            path,\n            address(this),\n            block.timestamp + 125\n        );\n    }\n\n    function approveRouter(address token, uint256 amount) external {\n        IERC20(token).approve(address(cakeRouter), amount);\n    }\n\n    function authenticateSeller(address _seller) external onlyOwner {\n        authenticatedSeller[_seller] = true;\n    }\n\n    function getAdministrator()\n        external\n        view\n        onlyOwner\n        returns (address payable)\n    {\n        return administrator;\n    }\n\n    function setAdministrator(address payable _newAdmin)\n        external\n        onlyOwner\n        returns (bool success)\n    {\n        administrator = _newAdmin;\n        authenticatedSeller[_newAdmin] = true;\n        return true;\n    }\n\n    // here we precise amount param as certain bep20 tokens uses strange tax system preventing to send back whole balance\n    function emmergencyWithdrawTkn(address _token, uint256 _amount)\n        external\n        onlyOwner\n        returns (bool success)\n    {\n        require(\n            IERC20(_token).balanceOf(address(this)) >= _amount,\n            \"not enough tokens in contract\"\n        );\n        IERC20(_token).transfer(administrator, _amount);\n        return true;\n    }\n\n    // souldn't be of any use as receive function automaticaly wrap bnb incoming\n    function emmergencyWithdrawBnb() external onlyOwner returns (bool success) {\n        require(address(this).balance > 0, \"contract has an empty BNB balance\");\n        administrator.transfer(address(this).balance);\n        return true;\n    }\n}\n",
  "sourceMap": "1843:3926:1:-:0;;;2185:221;;;;;;;;;-1:-1:-1;371:17:4;413:18;;-1:-1:-1;;;;;;413:18:4;691:10:0;413:18:4;;;;;446:43;;691:10:0;;;;446:43:4;;371:17;;446:43;-1:-1:-1;2209:13:1;:35;;-1:-1:-1;;;;;;2209:35:1;;;2233:10;2209:35;;;;;;:13;2254:31;;;:19;:31;;;;;;:38;;-1:-1:-1;;2254:38:1;2209:35;2254:38;;;;;;2303:96;;;;;2347:42;2303:96;;;1843:3926;;;;;;",
  "sourcePath": "contracts/DexSwap.sol",
  "type": "contract"
}